<UserControl x:Class="MPTagThat.TagEdit.Views.TagEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MPTagThat.TagEdit.Views"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:core="clr-namespace:MPTagThat.Core.Common.Converter;assembly=MPTagThat.Core"
             xmlns:utils="clr-namespace:MPTagThat.Core.Utils;assembly=MPTagThat.Core"
             lex:LocalizeDictionary.DesignCulture="en"
             lex:ResxLocalizationProvider.DefaultAssembly="MPTagThat"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             SizeChanged="TagEditView_OnSizeChanged"
             IsEnabled="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">

  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <core:InvertVisibilityConverter x:Key="InvertVisibilityConverter" />

    <!--  AccordionButton Style -->
    <Style TargetType="syncfusion:AccordionButton" x:Key="expanderButtonStyle">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="syncfusion:AccordionButton">
            <Grid Background="Transparent">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpansionStates">
                  <VisualState x:Name="Collapsed">
                    <Storyboard>
                      <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0" />
                      <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                        <SplineColorKeyFrame KeyTime="00:00:00" Value="#2b579a" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Expanded">
                    <Storyboard>
                      <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="90" />
                      <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                        <SplineColorKeyFrame KeyTime="00:00:00" Value="#2b579a" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="background" Background="{Binding Background}"  CornerRadius="1,1,1,1">
                <Grid>
                  <Border Height="Auto" Margin="0,0,0,0" x:Name="ExpandedBackground" VerticalAlignment="Stretch" Opacity="0" Background="Red" BorderBrush="Yellow" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />
                  <Grid Height="19" HorizontalAlignment="Left" x:Name="icon"  VerticalAlignment="Center" Width="19" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="0">
                    <Grid.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform />
                      </TransformGroup>
                    </Grid.RenderTransform>
                    <Path Height="Auto" HorizontalAlignment="Left" Margin="0,0,0,0" x:Name="arrow" VerticalAlignment="Center" Width="Auto" RenderTransformOrigin="0.5,0.5" Stroke="White" StrokeThickness="1.5" Stretch="Uniform" Data="M16.365994,20.000013L32.000027,29.802015 30.936978,31.497023 16.368008,22.360976 1.0660061,32.000013 2.7179741E-05,30.308973z M16.366,10L32.000001,19.802 30.937001,21.497 16.368001,12.361001 1.0659999,22 0,20.309z M16.366,0L32.000001,9.802 30.937001,11.497001 16.368001,2.3610001 1.0659999,12 0,10.309z"/>
                  </Grid>
                  <ContentPresenter TextElement.Foreground="#2b579a" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  x:Name="header" Grid.Row="0" Grid.RowSpan="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="30,0,0,0"/>
                </Grid>
              </Border>

            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Style for Group Box without Header -->
    <Style x:Key="GroupBoxStyleNoHeader" TargetType="{x:Type GroupBox}">
      <Setter Property="BorderBrush" Value="#D5DFE5"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="6"/>
              </Grid.RowDefinitions>
              <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
              <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                  <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                </Border>
              </Border>
              <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
              <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <DockPanel LastChildFill="True">
    <Grid DockPanel.Dock="Top" Margin="10,10,0,10">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width = "90" />
        <ColumnDefinition Width = "90" />
        <ColumnDefinition Width = "Auto" />
      </Grid.ColumnDefinitions>
      <syncfusion:ButtonAdv Grid.Column="0" Label="{lex:Loc dialog_Apply}" HorizontalAlignment="Left"  Width="75" 
                            SmallIcon="pack://application:,,,/MPTagThat;component/Resources/Images/Apply_Changes_32x.png" 
                            Command="{Binding ApplyEditCommand}"
                            CommandParameter="{Binding SongEdit}" 
                            IsEnabled="{Binding IsApplyButtonEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

      <syncfusion:ButtonAdv Grid.Column="1" Label="{lex:Loc dialog_Cancel}" HorizontalAlignment="Left"  Width="75" 
                            SmallIcon="pack://application:,,,/MPTagThat;component/Resources/Images/Cancel_Changes_32x.png" 
                            Command="{Binding CancelEditCommand}" />
    </Grid>
    <syncfusion:TabNavigationControl TabStripVisibility="Visible" SelectedIndex="0" >
      <syncfusion:TabNavigationItem Header="{lex:Loc tagEdit_TabHeader_Main}" >
        <syncfusion:TabNavigationItem.Content>
          <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "Auto" />
                <ColumnDefinition Width = "Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Grid.Row="0">
                <!-- Track and Disc -->
                <Grid Margin="5" >
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width = "100" />
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition Width = "15" />
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition Width = "20" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition Width = "15" />
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition Width = "20" />
                  </Grid.ColumnDefinitions>

                  <!-- Track -->
                  <Label Content="{lex:Loc tagEdit_Track}" />
                  <TextBox Grid.Column="1" Name="TrackNumber" Text="{Binding SongEdit.TrackNumber, StringFormat=0;;#, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="40">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <Label Grid.Column="2" Content="/" HorizontalAlignment="Left" VerticalAlignment="Top" />
                  <TextBox Grid.Column="3" Name="TrackCount" Text="{Binding SongEdit.TrackCount, StringFormat=0;;#, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="40" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="4" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkTrackIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />

                  <!-- Disc -->
                  <Label Content="{lex:Loc tagEdit_Disc}" Grid.Column="6" />
                  <TextBox Grid.Column="7" Name="DiscNumber"  Text="{Binding SongEdit.DiscNumber, StringFormat=0;;#, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="40" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <Label Grid.Column="8" Content="/" HorizontalAlignment="Left" VerticalAlignment="Top" />
                  <TextBox Grid.Column="9" Name="DiscCount" Text="{Binding SongEdit.DiscCount, StringFormat=0;;#, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="40" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="10" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkDiscIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Title -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Title}" />
                  <TextBox Grid.Column="1" Name="Title" Text="{Binding SongEdit.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkTitleIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Artist -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="230"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Artist}" />
                  <TextBox Grid.Column="1" Name="Artist" Text="{Binding SongEdit.Artist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <syncfusion:ButtonAdv  Grid.Column="2" Label="" Width="20" Height="30" Margin="0"  VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                     SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/CopyToAlbumArtist_10x.png" IconWidth="9" 
                                     Command="{Binding ApplyArtistToAlbumArtistCommand}" />
                  <CheckBox Grid.Column="3" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkArtistIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- AlbumArtist -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition  Width="250" />
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_AlbumArtist}" />
                  <TextBox Grid.Column="1" Name="AlbumArtist" Text="{Binding SongEdit.AlbumArtist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkAlbumArtistIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Album -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Album}" />
                  <TextBox Grid.Column="1" Name="Album" Text="{Binding SongEdit.Album, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkAlbumIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Year -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width = "Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Year}" />
                  <TextBox Grid.Column="1" Name="Year" Text="{Binding SongEdit.Year, StringFormat=0;;#, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkYearIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                  <CheckBox Grid.Column="4" Content="{lex:Loc tagEdit_PartOfCompilation}" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding SongEdit.Compilation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" />
                </Grid>
              </StackPanel>

              <StackPanel  x:Name="GenrePanel" Grid.Row="1"  Grid.Column="0" >

                <!-- Layout Changes -->
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="ApplicationViewStates">
                    <VisualState x:Name="Narrow">
                      <Storyboard>
                        <Int32Animation Storyboard.Target="{Binding ElementName=GenrePanel}"
                                      Storyboard.TargetProperty="(Grid.Row)" 
                                      From="0" To="1"/>
                        <Int32Animation Storyboard.Target="{Binding ElementName=GenrePanel}"
                                      Storyboard.TargetProperty="(Grid.Column)" 
                                      From="1" To="0"/>
                      </Storyboard>
                    </VisualState>

                    <VisualState x:Name="Wide">
                      <Storyboard>
                        <Int32Animation Storyboard.Target="{Binding ElementName=GenrePanel}"
                                      Storyboard.TargetProperty="(Grid.Row)" 
                                      From="1" To="0"/>
                        <Int32Animation Storyboard.Target="{Binding ElementName=GenrePanel}"
                                      Storyboard.TargetProperty="(Grid.Column)" 
                                      From="0" To="1"/>
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <!-- Genre -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Genre}" />
                  <syncfusion:ComboBoxAdv Grid.Column="1" Name="Genre" ItemsSource="{Binding Genres, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      DefaultText="{lex:Loc tagEdit_Genre_Watermark}" SelectedValueDelimiter=";" AllowMultiSelect="True"
                                      SelectedItems="{Binding SelectedGenres, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                  </syncfusion:ComboBoxAdv>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkGenreIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Composer -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Composer}" />
                  <TextBox Grid.Column="1" Name="Composer" Text="{Binding SongEdit.Composer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkComposerIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Conductor -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Conductor}" />
                  <TextBox Grid.Column="1" Name="Conductor" Text="{Binding SongEdit.Conductor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkConductorIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Comment -->
                <Grid Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0" Content="{lex:Loc tagEdit_Comment}" />
                  <TextBox Grid.Column="1" Name="Comment" Text="{Binding SongEdit.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                       TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" >
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </TextBox>
                  <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkCommentIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <!-- Picture -->
                <Grid Margin="5">
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                  </Grid.ColumnDefinitions>
                  <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc tagEdit_FrontCover}" />
                  <StackPanel Grid.Row="0" Grid.Column="1" >
                    <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/GetCoverArt_32x.png" 
                                         Command="{Binding GetCoverCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_GetCoverArt_Internet}" />
                    <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/File_32x.png" 
                                         Command="{Binding GetCoverFromFileCommand}"
                                         CommandParameter="{Binding SongEdit}" 
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_GetCoverArt_File}"/>
                    <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/RemovePictures_32x.png" 
                                         Command="{Binding RemoveCoverCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_Remove_CoverArt}"/>
                    <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Save_16x.png" 
                                         Command="{Binding SaveCoverCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_Save_CoverArt}"/>
                  </StackPanel>
                  <Border Grid.Row="0" Grid.Column="2" BorderThickness="1" BorderBrush="#FF000000" VerticalAlignment="Top" HorizontalAlignment="Left" Width="131" Height="131" >
                    <!-- The Canvas is needed to allow Drag&Drop on a empty image  -->
                    <Canvas Background="Transparent" AllowDrop="True"
                            utils:DragDropHelper.IsDragDropEnabled="True" utils:DragDropHelper.DragDropTarget="{Binding}" >
                      <Image  Name="FrontCover" Source="{Binding FrontCover}"  Width="128" Height="128" />
                    </Canvas>
                  </Border>
                  <CheckBox Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkPicturesIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                  <CheckBox Grid.Row="1" Grid.Column="2" Content="{lex:Loc tagEdit_Remove_Existing_Pictures}" IsChecked="{Binding CkRemovePicturesIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
              </StackPanel>
            </Grid>
          </ScrollViewer>
        </syncfusion:TabNavigationItem.Content>
      </syncfusion:TabNavigationItem>
      <syncfusion:TabNavigationItem Header="{lex:Loc tagEdit_TabHeader_Additional}" >
        <syncfusion:TabNavigationItem.Content>
          <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "Auto" />
                <ColumnDefinition Width = "5" />
                <ColumnDefinition Width = "Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Grid.Row="0" >
                <syncfusion:SfAccordion SelectionMode="ZeroOrMore" >
                  <syncfusion:SfAccordion.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="20" />
                    </DataTemplate>
                  </syncfusion:SfAccordion.HeaderTemplate>

                  <!-- Picture Details -->
                  <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Pictures}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" >
                    <StackPanel Margin="5,5,0,5" >
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition/>
                          <RowDefinition/>
                          <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="40"/>
                          <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" >
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/GetCoverArt_32x.png" 
                                         Command="{Binding GetCoverCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_GetCoverArt_Internet}" />
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/File_32x.png" 
                                         Command="{Binding GetCoverFromFileCommand}"
                                         CommandParameter="{Binding SongEdit}" 
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_GetCoverArt_File}"/>
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/RemovePictures_32x.png" 
                                         Command="{Binding RemoveDetailedCoverCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_RemoveDetail_CoverArt}"/>
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Save_16x.png" 
                                         Command="{Binding SaveDetailCoverCommand}"
                                         CommandParameter="{Binding SongEdit}" 
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Picture_SaveDetail_CoverArt}"/>
                        </StackPanel>
                        <Border Grid.Row="0" Grid.Column="1" BorderThickness="1" BorderBrush="#FF000000" VerticalAlignment="Top" HorizontalAlignment="Left" Width="131" Height="131" >
                          <Image   Source="{Binding PictureDetail}"  Width="128" Height="128" />
                        </Border>
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="{lex:Loc tagEdit_Remove_Existing_Pictures}" IsChecked="{Binding CkRemovePicturesIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <StackPanel Grid.Row="2" Grid.Column="1" Margin="0,5,0,0">
                          <syncfusion:SfDataGrid x:Name="PictureGrid"
                                               ItemsSource="{Binding SongEdit.Pictures, Mode=TwoWay}"
                                               SelectedItems="{Binding SelectedPicture,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                               SelectionMode="Single"
                                               ColumnSizer="AutoWithLastColumnFill" 
                                               AllowResizingColumns="True" 
                                               AllowDraggingColumns="False" 
                                               AutoGenerateColumns="False"
                                               ShowRowHeader="False" 
                                               AllowEditing="True" >
                            <syncfusion:SfDataGrid.Columns>
                              <syncfusion:GridComboBoxColumn ItemsSource="{Binding PictureTypes}" MappingName="Type" IsEditable="False"/>
                              <syncfusion:GridTextColumn MappingName="Description" />
                            </syncfusion:SfDataGrid.Columns>
                            <i:Interaction.Triggers>
                              <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding PictureSelectionChangedCommand}" />
                              </i:EventTrigger>
                            </i:Interaction.Triggers>
                          </syncfusion:SfDataGrid>
                        </StackPanel>
                      </Grid>
                    </StackPanel>
                  </syncfusion:SfAccordionItem>

                  <!-- Lyrics Details -->
                  <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Lyrics}" AccordionButtonStyle="{StaticResource expanderButtonStyle}">
                    <StackPanel Margin="5,5,0,5" >
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition/>
                          <RowDefinition/>
                          <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="40"/>
                          <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" >
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/GetLyrics_32x.png" 
                                         Command="{Binding GetLyricsCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Lyrics_GetInternet}" />
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/File_32x.png" 
                                         Command="{Binding GetLyricsFromFileCommand}"
                                         CommandParameter="{Binding SongEdit}" 
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Lyrics_GetFile}"/>
                          <syncfusion:ButtonAdv  Label="" Width="30" Height="30" VerticalAlignment="Top" Margin="0,4,0,0" HorizontalAlignment="Left" 
                                         SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/RemoveLyrics_32x.png" 
                                         Command="{Binding RemoveLyricsCommand}"
                                         ToolTip="{lex:Loc tagEdit_ToolTip_Lyrics_Remove}"/>
                        </StackPanel>
                        <TextBox Grid.Row="0" Grid.Column="1" Name="Lyrics" 
                               Text="{Binding SongEdit.Lyrics, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                               TextWrapping="Wrap" 
                               AcceptsReturn="True" 
                               VerticalScrollBarVisibility="Auto" 
                               MaxHeight="400" >

                        </TextBox>
                      </Grid>
                    </StackPanel>
                  </syncfusion:SfAccordionItem>

                  <!-- MusicBrainz Information -->
                  <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_MusicBrainz}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" >
                    <Grid>
                      <GroupBox Background="Transparent" Style="{DynamicResource GroupBoxStyleNoHeader}">
                        <StackPanel>
                          <!-- MusicBrainz Artist ID -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzArtistId}" />
                            <TextBox Grid.Column="1" Name="MBArtistId" Text="{Binding SongEdit.MusicBrainzArtistId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbArtistIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Artist ID -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseArtistId}" />
                            <TextBox Grid.Column="1" Name="MBReleaseArtistId" Text="{Binding SongEdit.MusicBrainzReleaseArtistId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseArtistIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release ID -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseId}" />
                            <TextBox Grid.Column="1" Name="MBReleaseId" Text="{Binding SongEdit.MusicBrainzReleaseId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Group ID -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseGroupId}" />
                            <TextBox Grid.Column="1" Name="MBReleaseGroupId" Text="{Binding SongEdit.MusicBrainzReleaseGroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseGroupIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Country -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseCountry}" />
                            <TextBox Grid.Column="1" Name="MBReleaseCountry" Text="{Binding SongEdit.MusicBrainzReleaseCountry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseCountryIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Disc Id -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzDiscId}" />
                            <TextBox Grid.Column="1" Name="MBDiscId" Text="{Binding SongEdit.MusicBrainzDiscId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbDiscIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Status -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseStatus}" />
                            <TextBox Grid.Column="1" Name="MBReleaseStatus" Text="{Binding SongEdit.MusicBrainzReleaseStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseStatusIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Type -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseType}" />
                            <TextBox Grid.Column="1" Name="MBReleaseType" Text="{Binding SongEdit.MusicBrainzReleaseType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseTypeIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- MusicBrainz Release Track Id -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="240"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MusicBrainzReleaseTrackId}" />
                            <TextBox Grid.Column="1" Name="MBTrackId" Text="{Binding SongEdit.MusicBrainzTrackId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMbReleaseTrackIdIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>
                        </StackPanel>
                      </GroupBox>
                    </Grid>
                  </syncfusion:SfAccordionItem>

                  <!-- Detailed Information -->
                  <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Detailed_Information}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}" >
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <GroupBox Grid.Row="0" Background="Transparent" Style="{DynamicResource GroupBoxStyleNoHeader}">
                        <StackPanel>
                          <!-- Interpreted By -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_InterpretedBy}" />
                            <TextBox Grid.Column="1" Name="InterpretedBy" Text="{Binding SongEdit.Interpreter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkInterpretedByIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- TextWriter -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_TextWriter}" />
                            <TextBox Grid.Column="1" Name="TextWriter" Text="{Binding SongEdit.TextWriter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkTextWriterIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- Publisher -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_Publisher}" />
                            <TextBox Grid.Column="1" Name="Publisher" Text="{Binding SongEdit.Publisher, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkPublisherIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- Encoded By -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_EncodedBy}" />
                            <TextBox Grid.Column="1" Name="EncodedBy" Text="{Binding SongEdit.EncodedBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkEncodedByIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- CopyRight -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_Copyright}" />
                            <TextBox Grid.Column="1" Name="CopyRight" Text="{Binding SongEdit.Copyright, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkCopyrightIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>
                        </StackPanel>
                      </GroupBox>

                      <GroupBox Grid.Row="1" Background="Transparent" Margin="0,5,0,0" Style="{DynamicResource GroupBoxStyleNoHeader}">
                        <StackPanel>
                          <!-- Content Group -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_Content_Group}" />
                            <TextBox Grid.Column="1" Name="Grouping" Text="{Binding SongEdit.Grouping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkContentGroupIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- SubTitle -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_SubTitle}" />
                            <TextBox Grid.Column="1" Name="Subtitle" Text="{Binding SongEdit.SubTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkSubTitleIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>
                        </StackPanel>
                      </GroupBox>

                      <GroupBox Grid.Row="2" Background="Transparent" Margin="0,5,0,0" Style="{DynamicResource GroupBoxStyleNoHeader}">
                        <StackPanel>
                          <!-- Artist Sort -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_ArtistSort}" />
                            <TextBox Grid.Column="1" Name="Artistsort" Text="{Binding SongEdit.ArtistSortName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkArtistSortIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- AlbumArtist Sort -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_AlbumArtistSort}" />
                            <TextBox Grid.Column="1" Name="AlbumArtistSort" Text="{Binding SongEdit.AlbumArtistSortName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkAlbumArtistSortIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- Album Sort -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_AlbumSort}" />
                            <TextBox Grid.Column="1"  Name="Albumsort" Text="{Binding SongEdit.AlbumSortName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkAlbumSortIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- Title Sort -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_TitleSort}" />
                            <TextBox Grid.Column="1" Name="TitleSort" Text="{Binding SongEdit.TitleSortName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                              <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                  <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                </i:EventTrigger>
                              </i:Interaction.Triggers>
                            </TextBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkTitleSortIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>
                        </StackPanel>
                      </GroupBox>

                      <GroupBox Grid.Row="3" Background="Transparent" Margin="0,5,0,0" Style="{DynamicResource GroupBoxStyleNoHeader}">
                        <StackPanel>
                          <!-- Media Type -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                              <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_MediaTypes}" />
                            <ComboBox Grid.Column="1" Name="MediaTypes"
                                    ItemsSource="{Binding MediaTypes}" 
                                    SelectedIndex="{Binding SelectedIndexMediaType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Name}" ToolTip="{Binding ToolTip}" >
                                  </TextBlock>
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </ComboBox>
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkMediaTypeIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                          <!-- Song Length -->
                          <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="120"/>
                              <ColumnDefinition Width="250"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc tagEdit_Songlength}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource InvertVisibilityConverter}}" />
                            <Grid Grid.Column="1">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="Auto"/>
                              </Grid.ColumnDefinitions>
                              <TextBox Grid.Column="0" Name="SongLength" Text="{Binding SongEdit.TrackLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                                     Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource InvertVisibilityConverter}}" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <syncfusion:ButtonAdv Grid.Column="1" Label="{lex:Loc tagEdit_GetTrackLength}" 
                                                  IconHeight="0" IconWidth="0"
                                                  Command="{Binding GetSongLengthCommand}" 
                                                  CommandParameter="{Binding SongEdit}"
                                                  Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource InvertVisibilityConverter}}"
                                                  Height="25" Margin="5,0,0,0" />
                            </Grid>
                            <CheckBox Grid.Column="1" Content="{lex:Loc tagEdit_GetTrackLength_Checkbox}" VerticalAlignment="Center" IsChecked="{Binding CkTrackLengthIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </Grid>

                        </StackPanel>
                      </GroupBox>
                    </Grid>
                  </syncfusion:SfAccordionItem>
                </syncfusion:SfAccordion>
                </StackPanel>

                <StackPanel  x:Name="AccordionPanel" Grid.Row="1" Grid.Column="0" >

                  <!-- Layout Changes -->
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="AccordionPanelStates">
                      <VisualState x:Name="AccordionNarrow">
                        <Storyboard>
                          <Int32Animation Storyboard.Target="{Binding ElementName=AccordionPanel}"
                                          Storyboard.TargetProperty="(Grid.Row)" 
                                          From="0" To="1"/>
                          <Int32Animation Storyboard.Target="{Binding ElementName=AccordionPanel}"
                                          Storyboard.TargetProperty="(Grid.Column)" 
                                          From="2" To="0"/>
                        </Storyboard>
                      </VisualState>

                      <VisualState x:Name="AccordionWide">
                        <Storyboard>
                          <Int32Animation Storyboard.Target="{Binding ElementName=AccordionPanel}"
                                          Storyboard.TargetProperty="(Grid.Row)" 
                                          From="1" To="0"/>
                          <Int32Animation Storyboard.Target="{Binding ElementName=AccordionPanel}"
                                          Storyboard.TargetProperty="(Grid.Column)" 
                                          From="0" To="2"/>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>

                  <syncfusion:SfAccordion SelectionMode="ZeroOrMore" >
                    <syncfusion:SfAccordion.HeaderTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="20" />
                      </DataTemplate>
                    </syncfusion:SfAccordion.HeaderTemplate>
                    <!-- Rating -->
                    <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Rating}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}">
                      <Grid>
                        <GroupBox Background="Transparent" Style="{DynamicResource GroupBoxStyleNoHeader}">
                          <StackPanel Orientation="Vertical">
                            <syncfusion:SfDataGrid x:Name="RatingGrid"
                                                 ItemsSource="{Binding SongEdit.Ratings}"
                                                 SelectedItems="{Binding SelectedRating,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                 SelectionMode="Single"
                                                 ColumnSizer="AutoWithLastColumnFill" 
                                                 AllowResizingColumns="True" 
                                                 AllowDraggingColumns="False" 
                                                 AutoGenerateColumns="False"
                                                 AllowDraggingRows="True"
                                                 AllowDrop="True"
                                                 ShowRowHeader="False" 
                                                 AllowEditing="True" >
                              <syncfusion:SfDataGrid.Columns>
                                <syncfusion:GridTextColumn HeaderText="{lex:Loc tagEdit_RatingUser}" MappingName="User" Width="200" />
                                <syncfusion:GridNumericColumn HeaderText="{lex:Loc songHeader_Rating}" MappingName="Rating" Width="80"  NumberDecimalDigits="0" />
                                <syncfusion:GridNumericColumn HeaderText="{lex:Loc tagEdit_RatingPlayCount}" MappingName="PlayCount" Width="80" NumberDecimalDigits="0" />
                              </syncfusion:SfDataGrid.Columns>
                            </syncfusion:SfDataGrid>
                            <StackPanel Orientation="Horizontal">
                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_Rating_Add}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Rating_Add_32x.png" 
                                                  Command="{Binding AddRatingCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="0,5,0,0" />

                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_Rating_Delete}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Rating_Delete_32x.png" 
                                                  Command="{Binding DeleteRatingCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="20,5,0,0" />
                            </StackPanel>
                            <TextBlock Text="{lex:Loc tagEdit_Rating_Note}" TextWrapping="Wrap" Margin="5,5,0,1"  Width="350"/>
                          </StackPanel>
                        </GroupBox>
                      </Grid>
                    </syncfusion:SfAccordionItem>

                    <!-- Original Information -->
                    <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Original_Information}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}">
                      <Grid>
                        <GroupBox Background="Transparent" Style="{DynamicResource GroupBoxStyleNoHeader}">
                          <StackPanel>
                            <!-- Original Artist -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigArtist}" />
                              <TextBox Grid.Column="1" Name="OrigArtist" Text="{Binding SongEdit.OriginalArtist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalArtistIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Original Album Title -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigAlbum}" />
                              <TextBox Grid.Column="1" Name="OrigAlbum" Text="{Binding SongEdit.OriginalAlbum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalAlbumIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Original FileName -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigFileName}" />
                              <TextBox Grid.Column="1" Name="OrigFileName" Text="{Binding SongEdit.OriginalFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalFileNameIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Original Lyrics Writer -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigLyricsWriter}" />
                              <TextBox Grid.Column="1" Name="OrigLyricsWriter" Text="{Binding SongEdit.OriginalLyricsWriter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalLyricsWriterIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Original Owner -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigOwner}" />
                              <TextBox Grid.Column="1" Name="OrigOwner" Text="{Binding SongEdit.OriginalOwner, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalOwnerIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Original Release Year -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OrigReleaseYear}" />
                              <TextBox Grid.Column="1" Name="OrigRelease" Text="{Binding SongEdit.OriginalRelease, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOriginalReleaseIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                          </StackPanel>
                        </GroupBox>
                      </Grid>
                    </syncfusion:SfAccordionItem>

                    <!-- Web Information -->
                    <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Web_Information}"  AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}" >
                      <Grid>
                        <GroupBox Background="Transparent" Style="{DynamicResource GroupBoxStyleNoHeader}">
                          <StackPanel>
                            <!-- Copyright Information -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_CopyrightInformation}" />
                              <TextBox Grid.Column="1" Name="CopyrightInformation" Text="{Binding SongEdit.CopyrightInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkCopyrightUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Audio File -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialAudiofile}" />
                              <TextBox Grid.Column="1" Name="AudioFileURL" Text="{Binding SongEdit.OfficialAudioFileInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialAudioFileUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Artist -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialArtist}" />
                              <TextBox Grid.Column="1" Name="ArtistURL" Text="{Binding SongEdit.OfficialArtistInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialArtistUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Audio source -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialAudioSource}" />
                              <TextBox Grid.Column="1" Name="AudioSourceURL" Text="{Binding SongEdit.OfficialAudioSourceInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialAudioSourceUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Radio Station -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialRadioStation}" />
                              <TextBox Grid.Column="1" Name="RadioURL" Text="{Binding SongEdit.OfficialInternetRadioInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialInternetRadioUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Payment -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialPayment}" />
                              <TextBox Grid.Column="1" Name="PaymentURL" Text="{Binding SongEdit.OfficialPaymentInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialPaymentUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Official Publisher -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_OfficialPublisher}" />
                              <TextBox Grid.Column="1" Name="PublisherURL" Text="{Binding SongEdit.OfficialPublisherInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkOfficialPublisherUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <!-- Commercial information -->
                            <Grid Margin="5">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="190"/>
                                <ColumnDefinition Width="20"/>
                              </Grid.ColumnDefinitions>
                              <Label Grid.Column="0" Content="{lex:Loc tagEdit_CommercialInfo}" />
                              <TextBox Grid.Column="1" Name="CommercialURL" Text="{Binding SongEdit.CommercialInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="TextChanged">
                                    <prism:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                              </TextBox>
                              <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2,0,0,0" IsChecked="{Binding CkCommercialInformationUrlIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding MultiCheckBoxVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                          </StackPanel>
                        </GroupBox>
                      </Grid>
                    </syncfusion:SfAccordionItem>

                    <!-- Involved People -->
                    <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_Involved_People}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}">
                      <StackPanel Orientation="Vertical">
                        <GroupBox Background="Transparent" Header="{lex:Loc tagEdit_InvolvedPerson_Header}" >
                          <StackPanel Orientation="Vertical">
                            <syncfusion:SfDataGrid ItemsSource="{Binding InvolvedPersons,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                 SelectedItems="{Binding SelectedPerson,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                 SelectionMode="Single"
                                                 ColumnSizer="AutoWithLastColumnFill" 
                                                 AllowResizingColumns="True" 
                                                 AllowDraggingColumns="False" 
                                                 AutoGenerateColumns="False"
                                                 ShowRowHeader="False" 
                                                 AllowEditing="True" >
                              <syncfusion:SfDataGrid.Columns>
                                <syncfusion:GridTextColumn HeaderText="{lex:Loc tagEdit_InvolvedPerson_Name}" MappingName="Name" Width="180" />
                                <syncfusion:GridTextColumn HeaderText="{lex:Loc tagEdit_InvolvedPerson_Function}" MappingName="Function" Width="180" />
                              </syncfusion:SfDataGrid.Columns>
                            </syncfusion:SfDataGrid>
                            <StackPanel Orientation="Horizontal">
                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_InvolvedPerson_Add}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Person_Add_32x.png" 
                                                  Command="{Binding AddPersonCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="0,5,0,0" />

                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_InvolvedPerson_Delete}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Person_Delete_32x.png" 
                                                  Command="{Binding DeletePersonCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="20,5,0,0" />
                            </StackPanel>
                          </StackPanel>
                        </GroupBox>

                        <GroupBox Background="Transparent" Header="{lex:Loc tagEdit_MusicCreditList_Header}" IsEnabled="{Binding SongEdit.IsMp3V4}" >
                          <StackPanel Orientation="Vertical">
                            <syncfusion:SfDataGrid ItemsSource="{Binding InvolvedMusicians,Mode=TwoWay}"
                                                 SelectedItems="{Binding SelectedMusician,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                 SelectionMode="Single"
                                                 ColumnSizer="AutoWithLastColumnFill" 
                                                 AllowResizingColumns="True" 
                                                 AllowDraggingColumns="False" 
                                                 AutoGenerateColumns="False"
                                                 ShowRowHeader="False" 
                                                 AllowEditing="True" >
                              <syncfusion:SfDataGrid.Columns>
                                <syncfusion:GridTextColumn HeaderText="{lex:Loc tagEdit_MusicCreditList_Instrument}" MappingName="Function" Width="180" />
                                <syncfusion:GridTextColumn HeaderText="{lex:Loc tagEdit_InvolvedPerson_Name}" MappingName="Name" Width="180" />
                              </syncfusion:SfDataGrid.Columns>
                            </syncfusion:SfDataGrid>
                            <StackPanel Orientation="Horizontal">
                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_MusicCreditList_Add}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Musician_Add_32x.png" 
                                                  Command="{Binding AddMusicianCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="0,5,0,0" />

                              <syncfusion:ButtonAdv Label="{lex:Loc tagEdit_MusicCreditList_Delete}" 
                                                  SmallIcon="pack://application:,,,/MPTagThat.TagEdit;component/Resources/Images/Musician_Delete_32x.png" 
                                                  Command="{Binding DeleteMusicianCommand}" 
                                                  Width="Auto" Height="25" 
                                                  Margin="20,5,0,0" />
                            </StackPanel>
                          </StackPanel>
                        </GroupBox>
                      </StackPanel>
                    </syncfusion:SfAccordionItem>

                    <!-- User Defined Frames -->
                    <syncfusion:SfAccordionItem Header="{lex:Loc tagEdit_TabHeader_UserFrames}" AccordionButtonStyle="{StaticResource expanderButtonStyle}" IsEnabled="{Binding SongEdit.IsMp3}">
                      <Grid>

                      </Grid>
                    </syncfusion:SfAccordionItem>
                  </syncfusion:SfAccordion>
                </StackPanel>
            </Grid>
          </ScrollViewer>
        </syncfusion:TabNavigationItem.Content>
      </syncfusion:TabNavigationItem>
    </syncfusion:TabNavigationControl>
  </DockPanel>
</UserControl>
