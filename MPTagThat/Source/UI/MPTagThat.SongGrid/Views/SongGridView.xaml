<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:core="clr-namespace:MPTagThat.Core.Common.Converter;assembly=MPTagThat.Core"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             x:Class="MPTagThat.SongGrid.Views.SongGridView"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             lex:LocalizeDictionary.DesignCulture="en"
             lex:ResxLocalizationProvider.DefaultAssembly="MPTagThat"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             syncfusion:DockingManager.SideInDockedMode= "Right"
             syncfusion:DockingManager.NoHeader="True"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="300" >

  <UserControl.Resources>
    <!-- The Converts used -->
    <core:BusyToCursorConverter x:Key="BusyToCursorConverter" />
    <core:RowChangedColorConverter x:Key="ChangedRowStyleSelector" />
    <core:AlternateRowChangedColorConverter x:Key="AlternateRowStyleSelector" />
    <core:ColorContrastConverter x:Key="ForegroundStyleSelector" />

    <!-- The Row Styles in the Grid -->
    <Style TargetType="syncfusion:VirtualizingCellsControl" x:Key="AlternatingRowStyle">
      <Setter Property="Background" Value="{Binding Path=Changed,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource AlternateRowStyleSelector}}"/>
      <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource ForegroundStyleSelector}}"/>
    </Style>
    <Style TargetType="syncfusion:VirtualizingCellsControl" x:Key="ChangedRowStyle">
      <Setter Property="Background" Value="{Binding Path=Changed,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource ChangedRowStyleSelector}}"/>
      <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background,Converter={StaticResource ForegroundStyleSelector}}"/>
    </Style>

    <!-- The Style of the Context Menu. Needed to prevent crash -->
    <Style TargetType="{x:Type ContextMenu}">
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ContextMenu}">
            <Border x:Name="Border" >
              <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Separator}">
            <Border x:Name="Border"  Background="LightGray"  Height="2" Margin="0" SnapsToDevicePixels="true" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <UserControl.Cursor>
    <Binding Path="DataContext.IsBusy" RelativeSource="{RelativeSource Self}" Converter="{StaticResource BusyToCursorConverter}" />
  </UserControl.Cursor>

  <Grid>
    <syncfusion:SfDataGrid x:Name="SongDataGrid" 
                           SelectedItems="{Binding SelectedItems,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           ItemsSource="{Binding Songs, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           Columns="{Binding DataGridColumns, Mode=TwoWay}" 
                           FrozenColumnCount="3"
                           ColumnSizer="AutoWithLastColumnFill" 
                           AllowFiltering="True"
                           FilterRowPosition="FixedTop"
                           AllowResizingColumns="True" 
                           AllowDraggingColumns="True"
                           AutoGenerateColumns="False"
                           ShowRowHeader="False" 
                           AllowEditing="True" 
                           SelectionMode="Extended" 
                           EnableDataVirtualization="True" 
                           ShowBusyIndicator="True" 
                           Cursor="{Binding CustomCursor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           ForceCursor="True"
                           AlternatingRowStyle="{StaticResource AlternatingRowStyle}" 
                           RowStyle="{StaticResource ChangedRowStyle}">

      <i:Interaction.Triggers>
        <i:EventTrigger EventName="SelectionChanged">
          <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=SongDataGrid}" />
        </i:EventTrigger>
      </i:Interaction.Triggers>

      <syncfusion:SfDataGrid.HeaderContextMenu>
        <ContextMenu>
          <MenuItem Command="{Binding Path=DataGrid.DataContext.ContextMenuClearSortCommand}"
                    CommandParameter="{Binding}"
                    Header="{lex:Loc contextMenu_ClearSort}">
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_ClearSort.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Command="{Binding Path=DataGrid.DataContext.ContextMenuClearAllSortCommand}"
                    CommandParameter="{Binding}"
                    Header="{lex:Loc contextMenu_ClearAllSort}">
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_ClearAllSort.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <Separator/>
          <MenuItem Command="{Binding Path=DataGrid.DataContext.ContextMenuClearFilterCommand}"
                    CommandParameter="{Binding}"
                    Header="{lex:Loc contextMenu_ClearFilter}">
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_ClearFilter.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Command="{Binding Path=DataGrid.DataContext.ContextMenuClearAllFiltersCommand}"
                    CommandParameter="{Binding}"
                    Header="{lex:Loc contextMenu_ClearAllFilters}">
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_ClearAllFilters.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <Separator/>
          <MenuItem Command="{Binding Path=DataGrid.DataContext.ContextMenuColumnChooserCommand}"
                    CommandParameter="{Binding}"
                    Header="{lex:Loc contextMenu_ColumnChooser}">
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_ColumnChooser.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
        </ContextMenu>
      </syncfusion:SfDataGrid.HeaderContextMenu>

      <syncfusion:SfDataGrid.ContextMenu>
        <ContextMenu>
          <MenuItem Header="{lex:Loc contextMenu_GoogleSearch}"
                    Command="{Binding ContextMenuGoogleSearchCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_Google.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <Separator/>
          <MenuItem Header="{lex:Loc contextMenu_Copy}"
                    Command="{Binding ContextMenuCopyCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_Copy.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="{lex:Loc contextMenu_Cut}"
                    Command="{Binding ContextMenuCutCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_Cut.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="{lex:Loc contextMenu_Paste}"
                    Command="{Binding ContextMenuPasteCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" 
                    IsEnabled="{Binding IsPasteEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_Paste.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="{lex:Loc contextMenu_Delete}"
                    Command="{Binding ContextMenuDeleteCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_Delete.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <Separator/>
          <MenuItem Header="{lex:Loc contextMenu_SelectAll}"
                    Command="{Binding ContextMenuSelectAllCommand}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_SelectAll.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
          <Separator/>
          <MenuItem Header="{lex:Loc contextMenu_AddConversionList}"
                    Command="{Binding ContextMenuAddConversionCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" >
            <MenuItem.Icon>
              <Image Source="pack://application:,,,/MPTagThat;component/Resources/Images/ContextMenu_AddConversionList.png" ></Image>
            </MenuItem.Icon>
          </MenuItem>
        </ContextMenu>
      </syncfusion:SfDataGrid.ContextMenu>

    </syncfusion:SfDataGrid>
  </Grid>
</UserControl>
