//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPTagThat.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MPTagThat.Resources.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MPTagThat - The MediaPortal Tag Editor ähnelt.
        /// </summary>
        public static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album ähnelt.
        /// </summary>
        public static string caseConversion_Album {
            get {
                return ResourceManager.GetString("caseConversion_Album", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Artist ähnelt.
        /// </summary>
        public static string caseConversion_AlbumArtist {
            get {
                return ResourceManager.GetString("caseConversion_AlbumArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All First Letter Upper Case ähnelt.
        /// </summary>
        public static string caseConversion_AllFirstLetterUpperCase {
            get {
                return ResourceManager.GetString("caseConversion_AllFirstLetterUpperCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Lower Case ähnelt.
        /// </summary>
        public static string caseConversion_AllLowerCase {
            get {
                return ResourceManager.GetString("caseConversion_AllLowerCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Upper Case ähnelt.
        /// </summary>
        public static string caseConversion_AllUpperCase {
            get {
                return ResourceManager.GetString("caseConversion_AllUpperCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always Uppercase First Letter ähnelt.
        /// </summary>
        public static string caseConversion_AlwaysUpperCaseFirstLetter {
            get {
                return ResourceManager.GetString("caseConversion_AlwaysUpperCaseFirstLetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist ähnelt.
        /// </summary>
        public static string caseConversion_Artist {
            get {
                return ResourceManager.GetString("caseConversion_Artist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment ähnelt.
        /// </summary>
        public static string caseConversion_Comment {
            get {
                return ResourceManager.GetString("caseConversion_Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string caseConversion_Exception_Add {
            get {
                return ResourceManager.GetString("caseConversion_Exception_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string caseConversion_Exception_Remove {
            get {
                return ResourceManager.GetString("caseConversion_Exception_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exceptions ähnelt.
        /// </summary>
        public static string caseConversion_Exceptions {
            get {
                return ResourceManager.GetString("caseConversion_Exceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert Filename ähnelt.
        /// </summary>
        public static string caseConversion_FileName {
            get {
                return ResourceManager.GetString("caseConversion_FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First Letter Upper Case ähnelt.
        /// </summary>
        public static string caseConversion_FirstLetterUpperCase {
            get {
                return ResourceManager.GetString("caseConversion_FirstLetterUpperCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conversion Method ähnelt.
        /// </summary>
        public static string caseConversion_GroupBox_Method {
            get {
                return ResourceManager.GetString("caseConversion_GroupBox_Method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert Tags for ... ähnelt.
        /// </summary>
        public static string caseConversion_GroupBoxTags {
            get {
                return ResourceManager.GetString("caseConversion_GroupBoxTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Conversion ähnelt.
        /// </summary>
        public static string caseConversion_Header {
            get {
                return ResourceManager.GetString("caseConversion_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Options ähnelt.
        /// </summary>
        public static string caseConversion_Options {
            get {
                return ResourceManager.GetString("caseConversion_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &quot;%20&quot; by Space ähnelt.
        /// </summary>
        public static string caseConversion_Replace20bySpace {
            get {
                return ResourceManager.GetString("caseConversion_Replace20bySpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace Space by &quot;%20&quot; ähnelt.
        /// </summary>
        public static string caseConversion_ReplaceSpaceBy20 {
            get {
                return ResourceManager.GetString("caseConversion_ReplaceSpaceBy20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace Space by &quot;_&quot; ähnelt.
        /// </summary>
        public static string caseConversion_ReplaceSpaceByUnderscore {
            get {
                return ResourceManager.GetString("caseConversion_ReplaceSpaceByUnderscore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &quot;_&quot; by Space ähnelt.
        /// </summary>
        public static string caseConversion_ReplaceUnderScoreBySpace {
            get {
                return ResourceManager.GetString("caseConversion_ReplaceUnderScoreBySpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string caseConversion_Tab_Settings {
            get {
                return ResourceManager.GetString("caseConversion_Tab_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert Tags ähnelt.
        /// </summary>
        public static string caseConversion_Tags {
            get {
                return ResourceManager.GetString("caseConversion_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string caseConversion_Title {
            get {
                return ResourceManager.GetString("caseConversion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose Columns ähnelt.
        /// </summary>
        public static string columnChooser_Heading {
            get {
                return ResourceManager.GetString("columnChooser_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Item(s) to Conversion List ähnelt.
        /// </summary>
        public static string contextMenu_AddConversionList {
            get {
                return ResourceManager.GetString("contextMenu_AddConversionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear All Filters ähnelt.
        /// </summary>
        public static string contextMenu_ClearAllFilters {
            get {
                return ResourceManager.GetString("contextMenu_ClearAllFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear All Sort ähnelt.
        /// </summary>
        public static string contextMenu_ClearAllSort {
            get {
                return ResourceManager.GetString("contextMenu_ClearAllSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Filter ähnelt.
        /// </summary>
        public static string contextMenu_ClearFilter {
            get {
                return ResourceManager.GetString("contextMenu_ClearFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove selected item(s) ähnelt.
        /// </summary>
        public static string contextMenu_ClearList {
            get {
                return ResourceManager.GetString("contextMenu_ClearList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Sort ähnelt.
        /// </summary>
        public static string contextMenu_ClearSort {
            get {
                return ResourceManager.GetString("contextMenu_ClearSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose Columns ähnelt.
        /// </summary>
        public static string contextMenu_ColumnChooser {
            get {
                return ResourceManager.GetString("contextMenu_ColumnChooser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy ähnelt.
        /// </summary>
        public static string contextMenu_Copy {
            get {
                return ResourceManager.GetString("contextMenu_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cut ähnelt.
        /// </summary>
        public static string contextMenu_Cut {
            get {
                return ResourceManager.GetString("contextMenu_Cut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string contextMenu_Delete {
            get {
                return ResourceManager.GetString("contextMenu_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for Song Cover on Google ähnelt.
        /// </summary>
        public static string contextMenu_GoogleSearch {
            get {
                return ResourceManager.GetString("contextMenu_GoogleSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paste ähnelt.
        /// </summary>
        public static string contextMenu_Paste {
            get {
                return ResourceManager.GetString("contextMenu_Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select All ähnelt.
        /// </summary>
        public static string contextMenu_SelectAll {
            get {
                return ResourceManager.GetString("contextMenu_SelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Encoder: ähnelt.
        /// </summary>
        public static string convert_Encoder {
            get {
                return ResourceManager.GetString("convert_Encoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error creating Target Directory ähnelt.
        /// </summary>
        public static string convert_ErrorDirectory {
            get {
                return ResourceManager.GetString("convert_ErrorDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error encoding File ähnelt.
        /// </summary>
        public static string convert_ErrorEncoding {
            get {
                return ResourceManager.GetString("convert_ErrorEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format: ähnelt.
        /// </summary>
        public static string convert_FileName_Format {
            get {
                return ResourceManager.GetString("convert_FileName_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters ähnelt.
        /// </summary>
        public static string convert_FileName_Parameters {
            get {
                return ResourceManager.GetString("convert_FileName_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select a Encoder from the list ähnelt.
        /// </summary>
        public static string convert_NoEncoder {
            get {
                return ResourceManager.GetString("convert_NoEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error opening File ähnelt.
        /// </summary>
        public static string convert_OpenFileError {
            get {
                return ResourceManager.GetString("convert_OpenFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Average Bitrate (ABR): ähnelt.
        /// </summary>
        public static string convert_Options_ABR_BitRate {
            get {
                return ResourceManager.GetString("convert_Options_ABR_BitRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AAC (m4a) ähnelt.
        /// </summary>
        public static string convert_Options_FAAC {
            get {
                return ResourceManager.GetString("convert_Options_FAAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter FAAC Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_FAAC_FAACExpert {
            get {
                return ResourceManager.GetString("convert_Options_FAAC_FAACExpert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AAC Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_FAAC_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_FAAC_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FLAC (flac) ähnelt.
        /// </summary>
        public static string convert_Options_FLAC {
            get {
                return ResourceManager.GetString("convert_Options_FLAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter FLAC Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_FLAC_FLACExpert {
            get {
                return ResourceManager.GetString("convert_Options_FLAC_FLACExpert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FLAC Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_FLAC_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_FLAC_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string convert_Options_General {
            get {
                return ResourceManager.GetString("convert_Options_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expert Settings ähnelt.
        /// </summary>
        public static string convert_Options_GroupBox_ExpertSettings {
            get {
                return ResourceManager.GetString("convert_Options_GroupBox_ExpertSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lame (mp3) ähnelt.
        /// </summary>
        public static string convert_Options_MP3 {
            get {
                return ResourceManager.GetString("convert_Options_MP3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For ABR modes (high quality per given bitrate but not as high as VBR). Using this preset will usually give you good quality at a specified bitrate.\n\nDepending on the bitrate entered, this preset will determine the optimal settings for that particular situation. While this approach works, it is not nearly as flexible as VBR, and usually will not attain the same level of quality as VBR at higher bitrates. ähnelt.
        /// </summary>
        public static string convert_Options_MP3_DescABR {
            get {
                return ResourceManager.GetString("convert_Options_MP3_DescABR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have extremely good hearing and similar equipment, this preset will generally provide slightly higher quality than the &quot;standard&quot; mode. (Bitrate Range 220-260) ähnelt.
        /// </summary>
        public static string convert_Options_MP3_DescExtreme {
            get {
                return ResourceManager.GetString("convert_Options_MP3_DescExtreme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CBR 320 kbps. This preset will usually be overkill for most people and most situations, but if you must have the absolute highest quality with no  regard to filesize, this is the way to go. ähnelt.
        /// </summary>
        public static string convert_Options_MP3_DescInsane {
            get {
                return ResourceManager.GetString("convert_Options_MP3_DescInsane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This preset should provide near transparency to most people on most music. (Bitrate Range 140-185) ähnelt.
        /// </summary>
        public static string convert_Options_MP3_DescMedium {
            get {
                return ResourceManager.GetString("convert_Options_MP3_DescMedium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This preset should generally be transparent to most people on most music and is already quite high in quality. (Bitrate Range 170-210) ähnelt.
        /// </summary>
        public static string convert_Options_MP3_DescStandard {
            get {
                return ResourceManager.GetString("convert_Options_MP3_DescStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MP3 Encoder Presets ähnelt.
        /// </summary>
        public static string convert_Options_MP3_GroupBoxPresets {
            get {
                return ResourceManager.GetString("convert_Options_MP3_GroupBoxPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter LAME Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_MP3_LameExpert {
            get {
                return ResourceManager.GetString("convert_Options_MP3_LameExpert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Musepack (mpc) ähnelt.
        /// </summary>
        public static string convert_Options_Musepack {
            get {
                return ResourceManager.GetString("convert_Options_Musepack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter Musepack Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_Musepack_Expert {
            get {
                return ResourceManager.GetString("convert_Options_Musepack_Expert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Musepack Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_Musepack_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_Musepack_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OGG Vorbis (ogg) ähnelt.
        /// </summary>
        public static string convert_Options_Ogg {
            get {
                return ResourceManager.GetString("convert_Options_Ogg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OGG Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_Ogg_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_Ogg_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter OGG Vorbis Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_Ogg_OggExpert {
            get {
                return ResourceManager.GetString("convert_Options_Ogg_OggExpert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quality: ähnelt.
        /// </summary>
        public static string convert_Options_Ogg_Quality {
            get {
                return ResourceManager.GetString("convert_Options_Ogg_Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opus (opus) ähnelt.
        /// </summary>
        public static string convert_Options_Opus {
            get {
                return ResourceManager.GetString("convert_Options_Opus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Complexity: ähnelt.
        /// </summary>
        public static string convert_Options_Opus_Complexity {
            get {
                return ResourceManager.GetString("convert_Options_Opus_Complexity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter Opus Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_Opus_Expert {
            get {
                return ResourceManager.GetString("convert_Options_Opus_Expert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opus Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_Opus_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_Opus_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preset: ähnelt.
        /// </summary>
        public static string convert_Options_Preset {
            get {
                return ResourceManager.GetString("convert_Options_Preset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: Preset settings will not be used, when specifying Expert parameters ähnelt.
        /// </summary>
        public static string convert_Options_WarningExpert {
            get {
                return ResourceManager.GetString("convert_Options_WarningExpert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WavPack (wv) ähnelt.
        /// </summary>
        public static string convert_Options_Wavpack {
            get {
                return ResourceManager.GetString("convert_Options_Wavpack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter WavPack Encoder parameters (Experts only): ähnelt.
        /// </summary>
        public static string convert_Options_WavPack_Expert {
            get {
                return ResourceManager.GetString("convert_Options_WavPack_Expert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WavPack Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_Wavpack_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_Wavpack_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Media Audio (wma) ähnelt.
        /// </summary>
        public static string convert_Options_WMA {
            get {
                return ResourceManager.GetString("convert_Options_WMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoder Format: ähnelt.
        /// </summary>
        public static string convert_Options_WMA_Encoder {
            get {
                return ResourceManager.GetString("convert_Options_WMA_Encoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Media Audio Encoding Settings ähnelt.
        /// </summary>
        public static string convert_Options_WMA_GroupBoxSettings {
            get {
                return ResourceManager.GetString("convert_Options_WMA_GroupBoxSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sample Format: ähnelt.
        /// </summary>
        public static string convert_Options_WMA_SampleFormat {
            get {
                return ResourceManager.GetString("convert_Options_WMA_SampleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Folder: ähnelt.
        /// </summary>
        public static string convert_OutputFolder {
            get {
                return ResourceManager.GetString("convert_OutputFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conversion aborted: Input and Output file are the same ähnelt.
        /// </summary>
        public static string convert_SameFile {
            get {
                return ResourceManager.GetString("convert_SameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save covers with a maximum pixel width of: ähnelt.
        /// </summary>
        public static string coverSearch_ChangeCoverSize {
            get {
                return ResourceManager.GetString("coverSearch_ChangeCoverSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create missing folder thumb (folder.jpg) on Save ähnelt.
        /// </summary>
        public static string coverSearch_CreateMissingFolderThumb {
            get {
                return ResourceManager.GetString("coverSearch_CreateMissingFolderThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embed existing folder thumb (folder.jpg) on cover search ähnelt.
        /// </summary>
        public static string coverSearch_EmbedExistingThumb {
            get {
                return ResourceManager.GetString("coverSearch_EmbedExistingThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search Finished. Select Cover Art (Double Click or Apply Button) ähnelt.
        /// </summary>
        public static string coverSearch_Finished {
            get {
                return ResourceManager.GetString("coverSearch_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select at least one Album Search Site ähnelt.
        /// </summary>
        public static string coverSearch_NoSites_Selected {
            get {
                return ResourceManager.GetString("coverSearch_NoSites_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Cover Art only to folder thumb. Don&apos;t touch the music file ähnelt.
        /// </summary>
        public static string coverSearch_OnlySaveFolderThumb {
            get {
                return ResourceManager.GetString("coverSearch_OnlySaveFolderThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite existing Cover(s) on automatic tagging ähnelt.
        /// </summary>
        public static string coverSearch_OverwriteExistingCover {
            get {
                return ResourceManager.GetString("coverSearch_OverwriteExistingCover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Album Search Site(s) ähnelt.
        /// </summary>
        public static string coverSearch_Sites_Watermark {
            get {
                return ResourceManager.GetString("coverSearch_Sites_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for Cover Art ... {0} Sites. Remaining: {1} ähnelt.
        /// </summary>
        public static string coverSearch_Status {
            get {
                return ResourceManager.GetString("coverSearch_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Cover Search ähnelt.
        /// </summary>
        public static string coverSearch_Title {
            get {
                return ResourceManager.GetString("coverSearch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database scan cancelled ähnelt.
        /// </summary>
        public static string database_ScanAborted {
            get {
                return ResourceManager.GetString("database_ScanAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database scan finished. Processed {0} tracks in: {1:d2}:{2:d2}:{3:d2} ähnelt.
        /// </summary>
        public static string database_ScanFinished {
            get {
                return ResourceManager.GetString("database_ScanFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Counters ähnelt.
        /// </summary>
        public static string databaseScan_GroupBox_Counts {
            get {
                return ResourceManager.GetString("databaseScan_GroupBox_Counts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan Status ähnelt.
        /// </summary>
        public static string databaseScan_GroupBox_Status {
            get {
                return ResourceManager.GetString("databaseScan_GroupBox_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Files scanned: ähnelt.
        /// </summary>
        public static string databaseScan_NumberOfFiles {
            get {
                return ResourceManager.GetString("databaseScan_NumberOfFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Songs: ähnelt.
        /// </summary>
        public static string databaseScan_NumberofSongs {
            get {
                return ResourceManager.GetString("databaseScan_NumberofSongs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database Status ähnelt.
        /// </summary>
        public static string databaseStatus_Header {
            get {
                return ResourceManager.GetString("databaseStatus_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Statistics ähnelt.
        /// </summary>
        public static string dataBaseStatus_UpdateStats {
            get {
                return ResourceManager.GetString("dataBaseStatus_UpdateStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply ähnelt.
        /// </summary>
        public static string dialog_Apply {
            get {
                return ResourceManager.GetString("dialog_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string dialog_Cancel {
            get {
                return ResourceManager.GetString("dialog_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel All ähnelt.
        /// </summary>
        public static string dialog_CancelAll {
            get {
                return ResourceManager.GetString("dialog_CancelAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string dialog_Close {
            get {
                return ResourceManager.GetString("dialog_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ok ähnelt.
        /// </summary>
        public static string dialog_Ok {
            get {
                return ResourceManager.GetString("dialog_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search ähnelt.
        /// </summary>
        public static string dialog_Search {
            get {
                return ResourceManager.GetString("dialog_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find Next ähnelt.
        /// </summary>
        public static string findReplace_FindNext {
            get {
                return ResourceManager.GetString("findReplace_FindNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find what: ähnelt.
        /// </summary>
        public static string findReplace_FindWhat {
            get {
                return ResourceManager.GetString("findReplace_FindWhat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string findReplace_HeaderFind {
            get {
                return ResourceManager.GetString("findReplace_HeaderFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string findReplace_HeaderReplace {
            get {
                return ResourceManager.GetString("findReplace_HeaderReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Match case ähnelt.
        /// </summary>
        public static string findReplace_MatchCase {
            get {
                return ResourceManager.GetString("findReplace_MatchCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No more occurences of search string found ähnelt.
        /// </summary>
        public static string findReplace_NoMoreOccurencesFound {
            get {
                return ResourceManager.GetString("findReplace_NoMoreOccurencesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search string not found ähnelt.
        /// </summary>
        public static string findReplace_NotFound {
            get {
                return ResourceManager.GetString("findReplace_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string findReplace_Replace {
            get {
                return ResourceManager.GetString("findReplace_Replace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace All ähnelt.
        /// </summary>
        public static string findReplace_ReplaceAll {
            get {
                return ResourceManager.GetString("findReplace_ReplaceAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace with: ähnelt.
        /// </summary>
        public static string findReplace_ReplaceWith {
            get {
                return ResourceManager.GetString("findReplace_ReplaceWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Country ähnelt.
        /// </summary>
        public static string identifySong_Country {
            get {
                return ResourceManager.GetString("identifySong_Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Identified Song ähnelt.
        /// </summary>
        public static string identifySong_GroupBox_Identified {
            get {
                return ResourceManager.GetString("identifySong_GroupBox_Identified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The song is available on multiple albums. Please select ähnelt.
        /// </summary>
        public static string identifySong_GroupBox_Results {
            get {
                return ResourceManager.GetString("identifySong_GroupBox_Results", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Tagging ähnelt.
        /// </summary>
        public static string identifySong_Title {
            get {
                return ResourceManager.GetString("identifySong_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Songs on Album ähnelt.
        /// </summary>
        public static string lookup_AlbumTracks {
            get {
                return ResourceManager.GetString("lookup_AlbumTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No album found, please choose another selection criteria. ähnelt.
        /// </summary>
        public static string lookup_NoAlbumFound {
            get {
                return ResourceManager.GetString("lookup_NoAlbumFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select Site: ähnelt.
        /// </summary>
        public static string lookup_SearchFinished {
            get {
                return ResourceManager.GetString("lookup_SearchFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for Albums ... {0} Sites. Remaining: {1} ähnelt.
        /// </summary>
        public static string lookup_SearchStatus {
            get {
                return ResourceManager.GetString("lookup_SearchStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Songs to Tag (Use Drag &amp; Drop to reorder) ähnelt.
        /// </summary>
        public static string lookup_SongsToTag {
            get {
                return ResourceManager.GetString("lookup_SongsToTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internet Lookup ähnelt.
        /// </summary>
        public static string lookup_Title {
            get {
                return ResourceManager.GetString("lookup_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search Finished. Select correct  Lyrics. ähnelt.
        /// </summary>
        public static string lyricsSearch_Finished {
            get {
                return ResourceManager.GetString("lyricsSearch_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select at least one Lyrics Search Site ähnelt.
        /// </summary>
        public static string lyricsSearch_NoSites_Selected {
            get {
                return ResourceManager.GetString("lyricsSearch_NoSites_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is nothing to search for ähnelt.
        /// </summary>
        public static string lyricsSearch_NothingToSearch {
            get {
                return ResourceManager.GetString("lyricsSearch_NothingToSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Lyrics Search Site(s) ähnelt.
        /// </summary>
        public static string lyricsSearch_Sites_Watermark {
            get {
                return ResourceManager.GetString("lyricsSearch_Sites_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for Lyrics ...  {0} Sites  x {1} Songs  = {2} Songs to Search. Found: {3} Not Found: {4} Remaining: {5} ähnelt.
        /// </summary>
        public static string lyricsSearch_Status {
            get {
                return ResourceManager.GetString("lyricsSearch_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch Artist before submit ähnelt.
        /// </summary>
        public static string lyricsSearch_SwitchArtist {
            get {
                return ResourceManager.GetString("lyricsSearch_SwitchArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyrics Search ähnelt.
        /// </summary>
        public static string lyricsSearch_Title {
            get {
                return ResourceManager.GetString("lyricsSearch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Corrupt File ähnelt.
        /// </summary>
        public static string message_CorruptFile {
            get {
                return ResourceManager.GetString("message_CorruptFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the selected files(s)? ähnelt.
        /// </summary>
        public static string message_DeleteConfirm {
            get {
                return ResourceManager.GetString("message_DeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete File(s) ähnelt.
        /// </summary>
        public static string message_DeleteConfirmHeader {
            get {
                return ResourceManager.GetString("message_DeleteConfirmHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string message_Error_Title {
            get {
                return ResourceManager.GetString("message_Error_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error reading file: {0} ähnelt.
        /// </summary>
        public static string message_ErrorReadingFile {
            get {
                return ResourceManager.GetString("message_ErrorReadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t reset readonly attribute ähnelt.
        /// </summary>
        public static string message_ErrorResetAttr {
            get {
                return ResourceManager.GetString("message_ErrorResetAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error saving file: {0} ähnelt.
        /// </summary>
        public static string message_ErrorSave {
            get {
                return ResourceManager.GetString("message_ErrorSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File no longer existing! ähnelt.
        /// </summary>
        public static string message_NonExistingFile {
            get {
                return ResourceManager.GetString("message_NonExistingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many files scanned. Running out of Memory.\r\nAborting Scan. ähnelt.
        /// </summary>
        public static string message_OutOfMemory {
            get {
                return ResourceManager.GetString("message_OutOfMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes have not been saved. Do you want to save the changes? ähnelt.
        /// </summary>
        public static string message_Save_Changes {
            get {
                return ResourceManager.GetString("message_Save_Changes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Changes ähnelt.
        /// </summary>
        public static string message_Save_Changes_Title {
            get {
                return ResourceManager.GetString("message_Save_Changes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The compile of the script failed.\n\nPlease look for the error in the log and correct it. ähnelt.
        /// </summary>
        public static string message_Script_Compile_Failed {
            get {
                return ResourceManager.GetString("message_Script_Compile_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported Format ähnelt.
        /// </summary>
        public static string message_UnsupportedFormat {
            get {
                return ResourceManager.GetString("message_UnsupportedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Misc Files ähnelt.
        /// </summary>
        public static string miscFiles_Header {
            get {
                return ResourceManager.GetString("miscFiles_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete selected file(s) ähnelt.
        /// </summary>
        public static string miscFiles_Menu_DeleteFiles {
            get {
                return ResourceManager.GetString("miscFiles_Menu_DeleteFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename to &quot;folder.jpg&quot; ähnelt.
        /// </summary>
        public static string miscFiles_Menu_Rename {
            get {
                return ResourceManager.GetString("miscFiles_Menu_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse ähnelt.
        /// </summary>
        public static string organise_BrowseFolder {
            get {
                return ResourceManager.GetString("organise_BrowseFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Files instead of Moving them ähnelt.
        /// </summary>
        public static string organise_Copy_Files {
            get {
                return ResourceManager.GetString("organise_Copy_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy/Move Non-Music Files (Pictures, etc.) ähnelt.
        /// </summary>
        public static string organise_Copy_NonMusic_Files {
            get {
                return ResourceManager.GetString("organise_Copy_NonMusic_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target File already exists. Will not be replaced ähnelt.
        /// </summary>
        public static string organise_FileExists {
            get {
                return ResourceManager.GetString("organise_FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die \ = Folder: to specify that parameters in front to be used as subfoldername within target folder ähnelt.
        /// </summary>
        public static string organise_Folder {
            get {
                return ResourceManager.GetString("organise_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format: ähnelt.
        /// </summary>
        public static string organise_Format {
            get {
                return ResourceManager.GetString("organise_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Organise Files ähnelt.
        /// </summary>
        public static string organise_Header {
            get {
                return ResourceManager.GetString("organise_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
        /// </summary>
        public static string organise_Options {
            get {
                return ResourceManager.GetString("organise_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Override Target Root Directory using Script: ähnelt.
        /// </summary>
        public static string organise_Override_TargetPath {
            get {
                return ResourceManager.GetString("organise_Override_TargetPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite existing files ähnelt.
        /// </summary>
        public static string organise_OverWrite_Files {
            get {
                return ResourceManager.GetString("organise_OverWrite_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source and Target File are the same. File skipped ähnelt.
        /// </summary>
        public static string organise_SameFile {
            get {
                return ResourceManager.GetString("organise_SameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target Path: ähnelt.
        /// </summary>
        public static string organise_TargetPath {
            get {
                return ResourceManager.GetString("organise_TargetPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About MPTagThat ähnelt.
        /// </summary>
        public static string ribbon_About {
            get {
                return ResourceManager.GetString("ribbon_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active Database: ähnelt.
        /// </summary>
        public static string ribbon_Active_Database {
            get {
                return ResourceManager.GetString("ribbon_Active_Database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to Burner ähnelt.
        /// </summary>
        public static string ribbon_AddBurner {
            get {
                return ResourceManager.GetString("ribbon_AddBurner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to Conversion ähnelt.
        /// </summary>
        public static string ribbon_AddConvert {
            get {
                return ResourceManager.GetString("ribbon_AddConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to Playlist ähnelt.
        /// </summary>
        public static string ribbon_AddPlaylist {
            get {
                return ResourceManager.GetString("ribbon_AddPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Number ähnelt.
        /// </summary>
        public static string ribbon_AutoNumber {
            get {
                return ResourceManager.GetString("ribbon_AutoNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string ribbon_Bar_About {
            get {
                return ResourceManager.GetString("ribbon_Bar_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BPM Detect ähnelt.
        /// </summary>
        public static string ribbon_BPM {
            get {
                return ResourceManager.GetString("ribbon_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Burn ähnelt.
        /// </summary>
        public static string ribbon_BurnTab {
            get {
                return ResourceManager.GetString("ribbon_BurnTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Conversion ähnelt.
        /// </summary>
        public static string ribbon_CaseConversion {
            get {
                return ResourceManager.GetString("ribbon_CaseConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Conversion ähnelt.
        /// </summary>
        public static string ribbon_CaseConversionMenu {
            get {
                return ResourceManager.GetString("ribbon_CaseConversionMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Conversion Options ähnelt.
        /// </summary>
        public static string ribbon_CaseConversionOption {
            get {
                return ResourceManager.GetString("ribbon_CaseConversionOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel Convert ähnelt.
        /// </summary>
        public static string ribbon_ConvertCancel {
            get {
                return ResourceManager.GetString("ribbon_ConvertCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Convert ähnelt.
        /// </summary>
        public static string ribbon_ConvertStart {
            get {
                return ResourceManager.GetString("ribbon_ConvertStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert ähnelt.
        /// </summary>
        public static string ribbon_ConvertTab {
            get {
                return ResourceManager.GetString("ribbon_ConvertTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active database: ähnelt.
        /// </summary>
        public static string ribbon_Database_Active {
            get {
                return ResourceManager.GetString("ribbon_Database_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear database content before scanning ähnelt.
        /// </summary>
        public static string ribbon_Database_Clear {
            get {
                return ResourceManager.GetString("ribbon_Database_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Database ähnelt.
        /// </summary>
        public static string ribbon_Database_Delete {
            get {
                return ResourceManager.GetString("ribbon_Database_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database Maintenance ähnelt.
        /// </summary>
        public static string ribbon_Database_MainGroup {
            get {
                return ResourceManager.GetString("ribbon_Database_MainGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Music Files ähnelt.
        /// </summary>
        public static string ribbon_Database_MusicFolder {
            get {
                return ResourceManager.GetString("ribbon_Database_MusicFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Query ähnelt.
        /// </summary>
        public static string ribbon_Database_Query {
            get {
                return ResourceManager.GetString("ribbon_Database_Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database Query ähnelt.
        /// </summary>
        public static string ribbon_Database_QueryGroup {
            get {
                return ResourceManager.GetString("ribbon_Database_QueryGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abort Scan ähnelt.
        /// </summary>
        public static string ribbon_Database_ScanAbort {
            get {
                return ResourceManager.GetString("ribbon_Database_ScanAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Scan ähnelt.
        /// </summary>
        public static string ribbon_Database_ScanStart {
            get {
                return ResourceManager.GetString("ribbon_Database_ScanStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database Status ähnelt.
        /// </summary>
        public static string ribbon_Database_Status {
            get {
                return ResourceManager.GetString("ribbon_Database_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch Database ähnelt.
        /// </summary>
        public static string ribbon_Database_Switch {
            get {
                return ResourceManager.GetString("ribbon_Database_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag Checker ähnelt.
        /// </summary>
        public static string ribbon_Database_TagChecker {
            get {
                return ResourceManager.GetString("ribbon_Database_TagChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TagChecker Tools ähnelt.
        /// </summary>
        public static string ribbon_Database_TagChecker_Tools {
            get {
                return ResourceManager.GetString("ribbon_Database_TagChecker_Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checks ähnelt.
        /// </summary>
        public static string ribbon_Database_TagChecker_Tools_Checks {
            get {
                return ResourceManager.GetString("ribbon_Database_TagChecker_Tools_Checks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Actions ähnelt.
        /// </summary>
        public static string ribbon_Database_TagChecker_Tools_Checks_Actions {
            get {
                return ResourceManager.GetString("ribbon_Database_TagChecker_Tools_Checks_Actions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database ähnelt.
        /// </summary>
        public static string ribbon_DatabaseContextualTab {
            get {
                return ResourceManager.GetString("ribbon_DatabaseContextualTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database ähnelt.
        /// </summary>
        public static string ribbon_DatabaseTab {
            get {
                return ResourceManager.GetString("ribbon_DatabaseTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete All Tags ähnelt.
        /// </summary>
        public static string ribbon_DeleteAllTags {
            get {
                return ResourceManager.GetString("ribbon_DeleteAllTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ID3 V1 Tags only ähnelt.
        /// </summary>
        public static string ribbon_DeleteID3V1Tags {
            get {
                return ResourceManager.GetString("ribbon_DeleteID3V1Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ID3 V2 Tags only ähnelt.
        /// </summary>
        public static string ribbon_DeleteID3V2Tags {
            get {
                return ResourceManager.GetString("ribbon_DeleteID3V2Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Layout ähnelt.
        /// </summary>
        public static string ribbon_DeleteLayout {
            get {
                return ResourceManager.GetString("ribbon_DeleteLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Tags ähnelt.
        /// </summary>
        public static string ribbon_DeleteTags {
            get {
                return ResourceManager.GetString("ribbon_DeleteTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Tags ähnelt.
        /// </summary>
        public static string ribbon_EditTags {
            get {
                return ResourceManager.GetString("ribbon_EditTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Execute Script ähnelt.
        /// </summary>
        public static string ribbon_ExecuteScript {
            get {
                return ResourceManager.GetString("ribbon_ExecuteScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        public static string ribbon_Exit {
            get {
                return ResourceManager.GetString("ribbon_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string ribbon_Find {
            get {
                return ResourceManager.GetString("ribbon_Find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix MP3 ähnelt.
        /// </summary>
        public static string ribbon_FixSong {
            get {
                return ResourceManager.GetString("ribbon_FixSong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Cover Art ähnelt.
        /// </summary>
        public static string ribbon_GetCoverArt {
            get {
                return ResourceManager.GetString("ribbon_GetCoverArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Lyrics ähnelt.
        /// </summary>
        public static string ribbon_GetLyrics {
            get {
                return ResourceManager.GetString("ribbon_GetLyrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Tagging ähnelt.
        /// </summary>
        public static string ribbon_IdentifyFile {
            get {
                return ResourceManager.GetString("ribbon_IdentifyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multiple Tag Edit ähnelt.
        /// </summary>
        public static string ribbon_MultiTagEdit {
            get {
                return ResourceManager.GetString("ribbon_MultiTagEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MusicBrainz Info ähnelt.
        /// </summary>
        public static string ribbon_MusicBrainz {
            get {
                return ResourceManager.GetString("ribbon_MusicBrainz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number on Click ähnelt.
        /// </summary>
        public static string ribbon_NumberOnClick {
            get {
                return ResourceManager.GetString("ribbon_NumberOnClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Organise Files ähnelt.
        /// </summary>
        public static string ribbon_Organise {
            get {
                return ResourceManager.GetString("ribbon_Organise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Organise ähnelt.
        /// </summary>
        public static string ribbon_OrganiseFiles {
            get {
                return ResourceManager.GetString("ribbon_OrganiseFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other ähnelt.
        /// </summary>
        public static string ribbon_Other {
            get {
                return ResourceManager.GetString("ribbon_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Coverart ähnelt.
        /// </summary>
        public static string ribbon_Picture {
            get {
                return ResourceManager.GetString("ribbon_Picture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string ribbon_Refresh {
            get {
                return ResourceManager.GetString("ribbon_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove: ähnelt.
        /// </summary>
        public static string ribbon_RemoveCommentPicture {
            get {
                return ResourceManager.GetString("ribbon_RemoveCommentPicture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove all comments ähnelt.
        /// </summary>
        public static string ribbon_RemoveComments {
            get {
                return ResourceManager.GetString("ribbon_RemoveComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove all pictures ähnelt.
        /// </summary>
        public static string ribbon_RemovePictures {
            get {
                return ResourceManager.GetString("ribbon_RemovePictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename File ähnelt.
        /// </summary>
        public static string ribbon_RenameFile {
            get {
                return ResourceManager.GetString("ribbon_RenameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename File ähnelt.
        /// </summary>
        public static string ribbon_RenameFileMenu {
            get {
                return ResourceManager.GetString("ribbon_RenameFileMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename File Options ähnelt.
        /// </summary>
        public static string ribbon_RenameFileOptions {
            get {
                return ResourceManager.GetString("ribbon_RenameFileOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string ribbon_Replace {
            get {
                return ResourceManager.GetString("ribbon_Replace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replay Gain ähnelt.
        /// </summary>
        public static string ribbon_ReplayGain {
            get {
                return ResourceManager.GetString("ribbon_ReplayGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset Layout ähnelt.
        /// </summary>
        public static string ribbon_ResetLayout {
            get {
                return ResourceManager.GetString("ribbon_ResetLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieve Tags ähnelt.
        /// </summary>
        public static string ribbon_RetrieveTags {
            get {
                return ResourceManager.GetString("ribbon_RetrieveTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel Rip ähnelt.
        /// </summary>
        public static string ribbon_RipCancel {
            get {
                return ResourceManager.GetString("ribbon_RipCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CD Query ähnelt.
        /// </summary>
        public static string ribbon_RipGnuDB {
            get {
                return ResourceManager.GetString("ribbon_RipGnuDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Rip ähnelt.
        /// </summary>
        public static string ribbon_RipStart {
            get {
                return ResourceManager.GetString("ribbon_RipStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rip ähnelt.
        /// </summary>
        public static string ribbon_RipTab {
            get {
                return ResourceManager.GetString("ribbon_RipTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string ribbon_Save {
            get {
                return ResourceManager.GetString("ribbon_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save as Folder Thumb ähnelt.
        /// </summary>
        public static string ribbon_SaveFolderThumb {
            get {
                return ResourceManager.GetString("ribbon_SaveFolderThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string ribbon_Settings {
            get {
                return ResourceManager.GetString("ribbon_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Single Tag Edit ähnelt.
        /// </summary>
        public static string ribbon_SingleTagEdit {
            get {
                return ResourceManager.GetString("ribbon_SingleTagEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Selection ähnelt.
        /// </summary>
        public static string ribbon_TagChecker_ApplySelected {
            get {
                return ResourceManager.GetString("ribbon_TagChecker_ApplySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check Artists Tags ähnelt.
        /// </summary>
        public static string ribbon_TagChecker_CheckArtists {
            get {
                return ResourceManager.GetString("ribbon_TagChecker_CheckArtists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore Selection ähnelt.
        /// </summary>
        public static string ribbon_TagChecker_IgnoreSelected {
            get {
                return ResourceManager.GetString("ribbon_TagChecker_IgnoreSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan Database ähnelt.
        /// </summary>
        public static string ribbon_TagChecker_ScanDatabase {
            get {
                return ResourceManager.GetString("ribbon_TagChecker_ScanDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag from Filename ähnelt.
        /// </summary>
        public static string ribbon_TagFromFile {
            get {
                return ResourceManager.GetString("ribbon_TagFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag from Internet ähnelt.
        /// </summary>
        public static string ribbon_TagFromInternet {
            get {
                return ResourceManager.GetString("ribbon_TagFromInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags ähnelt.
        /// </summary>
        public static string ribbon_TagTab {
            get {
                return ResourceManager.GetString("ribbon_TagTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validate MP3 ähnelt.
        /// </summary>
        public static string ribbon_ValidateSong {
            get {
                return ResourceManager.GetString("ribbon_ValidateSong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate Target Folder after Ripping ähnelt.
        /// </summary>
        public static string rip_ActivateTargetFolder {
            get {
                return ResourceManager.GetString("rip_ActivateTargetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select CD: ähnelt.
        /// </summary>
        public static string rip_CDs {
            get {
                return ResourceManager.GetString("rip_CDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eject CD after Ripping ähnelt.
        /// </summary>
        public static string rip_Eject {
            get {
                return ResourceManager.GetString("rip_Eject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ripping Options ähnelt.
        /// </summary>
        public static string rip_Options {
            get {
                return ResourceManager.GetString("rip_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adds the selected files to the list of files to be converted to a different format. ähnelt.
        /// </summary>
        public static string screentip_AddConvert {
            get {
                return ResourceManager.GetString("screentip_AddConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The track number of the selected song is set using the value in the text box as the start number. ähnelt.
        /// </summary>
        public static string screentip_AutoNumberText {
            get {
                return ResourceManager.GetString("screentip_AutoNumberText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyses the selected file and calculates the Beats per Minute (BPM). The calcualted value is written into the Tags. Note: The file itself is not modified. ähnelt.
        /// </summary>
        public static string screentip_BPMText {
            get {
                return ResourceManager.GetString("screentip_BPMText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Conversion Rules, as set in the options, are applied on all selected files. ähnelt.
        /// </summary>
        public static string screentip_CaseConversionText {
            get {
                return ResourceManager.GetString("screentip_CaseConversionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terminates the Conversion process ähnelt.
        /// </summary>
        public static string screentip_ConvertCancel {
            get {
                return ResourceManager.GetString("screentip_ConvertCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Conversion of the files in the list to the selected format ähnelt.
        /// </summary>
        public static string screentip_ConvertStart {
            get {
                return ResourceManager.GetString("screentip_ConvertStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deletes the active Database ähnelt.
        /// </summary>
        public static string screentip_Database_Delete {
            get {
                return ResourceManager.GetString("screentip_Database_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Runs the Query against the selected Database ähnelt.
        /// </summary>
        public static string screentip_Database_Query {
            get {
                return ResourceManager.GetString("screentip_Database_Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aborts the currently running scan ähnelt.
        /// </summary>
        public static string screentip_Database_ScanAbort {
            get {
                return ResourceManager.GetString("screentip_Database_ScanAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starts scanning the specified share and stores the result in the selected database. ähnelt.
        /// </summary>
        public static string screentip_Database_ScanStart {
            get {
                return ResourceManager.GetString("screentip_Database_ScanStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays Status Information for the active Database ähnelt.
        /// </summary>
        public static string screentip_Database_Status {
            get {
                return ResourceManager.GetString("screentip_Database_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opens a dialog to switch between Databases ähnelt.
        /// </summary>
        public static string screentip_Database_Switch {
            get {
                return ResourceManager.GetString("screentip_Database_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invokes the Tag Checker function, comparing Album Artists, Artists and Albums of the currently active database against MusicBrainz ähnelt.
        /// </summary>
        public static string screenTip_Database_TagChecker {
            get {
                return ResourceManager.GetString("screenTip_Database_TagChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The layout of the regions in the Docking Manager is saved upon exit and reused at the next start of the application. Use this function to return to the default application layout. ähnelt.
        /// </summary>
        public static string screentip_DeleteLayoutText {
            get {
                return ResourceManager.GetString("screentip_DeleteLayoutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All tags are removed from the selected files. ähnelt.
        /// </summary>
        public static string screentip_DeleteTagsText {
            get {
                return ResourceManager.GetString("screentip_DeleteTagsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applies the script in the combo box to the selected files. ähnelt.
        /// </summary>
        public static string screentip_ExecuteScriptText {
            get {
                return ResourceManager.GetString("screentip_ExecuteScriptText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opens the find dialog to search for the specified string in the songs displayed in the grid. ähnelt.
        /// </summary>
        public static string screentip_FindText {
            get {
                return ResourceManager.GetString("screentip_FindText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uses MP3Val to fix errors detected in the selected MP3 File. ähnelt.
        /// </summary>
        public static string screentip_FixSongText {
            get {
                return ResourceManager.GetString("screentip_FixSongText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cover Art for the selected songs is search on the various selected sites ähnelt.
        /// </summary>
        public static string screentip_GetCoverArtText {
            get {
                return ResourceManager.GetString("screentip_GetCoverArtText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyrics for the selected songs is searched on various Lyrics sources checked in the dialog. ähnelt.
        /// </summary>
        public static string screentip_GetLyricsText {
            get {
                return ResourceManager.GetString("screentip_GetLyricsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A hash is built over the first 30 seconds of the file. This hash is then used to identify the file on MusicBrainz. The tags are then retrieved from MusicBrainz and written to the file. ähnelt.
        /// </summary>
        public static string screentip_IdentifyFileText {
            get {
                return ResourceManager.GetString("screentip_IdentifyFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieve MusicBrainz information for the selected song(s) ähnelt.
        /// </summary>
        public static string screentip_MusicBrainzInfo {
            get {
                return ResourceManager.GetString("screentip_MusicBrainzInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die While the button is toggled on, a click on a file sets the track number. ähnelt.
        /// </summary>
        public static string screentip_NumberOnClickText {
            get {
                return ResourceManager.GetString("screentip_NumberOnClickText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The files are copied/moved to a new location based on their tag values as specified in the dialog parameters. ähnelt.
        /// </summary>
        public static string screentip_OrganiseText {
            get {
                return ResourceManager.GetString("screentip_OrganiseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The content of the currently selected folder is reread. If changes are pending, the system asks if the changes should be saved first. ähnelt.
        /// </summary>
        public static string screentip_RefreshText {
            get {
                return ResourceManager.GetString("screentip_RefreshText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All comments found in the selected files are removed. ähnelt.
        /// </summary>
        public static string screentip_RemoveCommentsText {
            get {
                return ResourceManager.GetString("screentip_RemoveCommentsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The files are renamed according to the parameters specified in the dialog. ähnelt.
        /// </summary>
        public static string screentip_RenameFileText {
            get {
                return ResourceManager.GetString("screentip_RenameFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opens the Find / Replace dialog to replace a specified search string in the songs displayed in the grid. ähnelt.
        /// </summary>
        public static string screentip_ReplaceText {
            get {
                return ResourceManager.GetString("screentip_ReplaceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyses the selected file and calculates the Replay Gain. The calcualted value is written into the Tags. Note: The file itself is not modified. ähnelt.
        /// </summary>
        public static string screentip_ReplayGainText {
            get {
                return ResourceManager.GetString("screentip_ReplayGainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The layout of the regions in the Docking Manager is reset to the Last Saved state. ähnelt.
        /// </summary>
        public static string screentip_ResetLayoutText {
            get {
                return ResourceManager.GetString("screentip_ResetLayoutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abort the riping process ähnelt.
        /// </summary>
        public static string screentip_RipCancel {
            get {
                return ResourceManager.GetString("screentip_RipCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Looks up the current Audio CD on GnuDB and MusicBrainz and fills the information into the song grid, ready for ripping ähnelt.
        /// </summary>
        public static string screentip_RipGnuDB {
            get {
                return ResourceManager.GetString("screentip_RipGnuDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start riping the selected CD tracks in the list to the selected format ähnelt.
        /// </summary>
        public static string screentip_RipStart {
            get {
                return ResourceManager.GetString("screentip_RipStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saves pending changes to disk and changes the tags of all selected songs. ähnelt.
        /// </summary>
        public static string screentip_SaveText {
            get {
                return ResourceManager.GetString("screentip_SaveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open the Settings Dialog ähnelt.
        /// </summary>
        public static string screentip_SettingsText {
            get {
                return ResourceManager.GetString("screentip_SettingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply the changes in the selected rows ähnelt.
        /// </summary>
        public static string screenTip_TagChecker_ApplySelected {
            get {
                return ResourceManager.GetString("screenTip_TagChecker_ApplySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Artists and Album Artists from the current database and check them against MusicBrainz ähnelt.
        /// </summary>
        public static string screenTip_TagChecker_CheckArtists {
            get {
                return ResourceManager.GetString("screenTip_TagChecker_CheckArtists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore the selected rows from further processing ähnelt.
        /// </summary>
        public static string screenTip_TagChecker_IgnoreSelected {
            get {
                return ResourceManager.GetString("screenTip_TagChecker_IgnoreSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rescan the Database for Artists or Albums. ATTENTION: The content of the TagChecker Database will be cleared. ähnelt.
        /// </summary>
        public static string screenTip_TagChecker_ScanDatabase {
            get {
                return ResourceManager.GetString("screenTip_TagChecker_ScanDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Using specific parameters given in the dialog, the various tags like &quot;Track #&quot;, &quot;Artist&quot;, &quot;Title&quot;, etc. are extracted out of the filename. ähnelt.
        /// </summary>
        public static string screentip_TagFromFileText {
            get {
                return ResourceManager.GetString("screentip_TagFromFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given Artist and Album Name are used for a lookup at online sources, like Discogs, Last.FM and MusicBrainz, trying to match the filenames to the list retrieved from the online sources ähnelt.
        /// </summary>
        public static string screentip_TagFromInternetText {
            get {
                return ResourceManager.GetString("screentip_TagFromInternetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uses MP3Val to validate the correctness of the selected MP3 File. Some errors may be fixed using the &quot;Fix MP3&quot; Button ähnelt.
        /// </summary>
        public static string screentip_ValidateSongText {
            get {
                return ResourceManager.GetString("screentip_ValidateSongText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alternate Row Color: ähnelt.
        /// </summary>
        public static string settings_AlternateRowColor {
            get {
                return ResourceManager.GetString("settings_AlternateRowColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed Row Color: ähnelt.
        /// </summary>
        public static string settings_ChangedRowColor {
            get {
                return ResourceManager.GetString("settings_ChangedRowColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logging Level: ähnelt.
        /// </summary>
        public static string settings_DebugLevel {
            get {
                return ResourceManager.GetString("settings_DebugLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings ähnelt.
        /// </summary>
        public static string settings_General {
            get {
                return ResourceManager.GetString("settings_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string settings_Header {
            get {
                return ResourceManager.GetString("settings_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Genre ähnelt.
        /// </summary>
        public static string settings_Id3_AddGenre {
            get {
                return ResourceManager.GetString("settings_Id3_AddGenre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear User Defined Frames on Save ähnelt.
        /// </summary>
        public static string settings_Id3_ClearUserFrames {
            get {
                return ResourceManager.GetString("settings_Id3_ClearUserFrames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoding when saving Tags: ähnelt.
        /// </summary>
        public static string settings_Id3_Encoding {
            get {
                return ResourceManager.GetString("settings_Id3_Encoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically fix errorneous Mp3 Files ähnelt.
        /// </summary>
        public static string settings_Id3_FixMp3 {
            get {
                return ResourceManager.GetString("settings_Id3_FixMp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID3 ähnelt.
        /// </summary>
        public static string settings_Id3_Header {
            get {
                return ResourceManager.GetString("settings_Id3_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Genres ähnelt.
        /// </summary>
        public static string settings_Id3_Header_CustomGenres {
            get {
                return ResourceManager.GetString("settings_Id3_Header_CustomGenres", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MP3 File Validation ähnelt.
        /// </summary>
        public static string settings_Id3_Header_MP3Validation {
            get {
                return ResourceManager.GetString("settings_Id3_Header_MP3Validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        public static string settings_Id3_Header_Update {
            get {
                return ResourceManager.GetString("settings_Id3_Header_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Genre(s) ähnelt.
        /// </summary>
        public static string settings_Id3_RemoveGenre {
            get {
                return ResourceManager.GetString("settings_Id3_RemoveGenre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Genre(s) ähnelt.
        /// </summary>
        public static string settings_Id3_SaveGenre {
            get {
                return ResourceManager.GetString("settings_Id3_SaveGenre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ID3 V1 ähnelt.
        /// </summary>
        public static string settings_Id3_UpdateRemoveV1 {
            get {
                return ResourceManager.GetString("settings_Id3_UpdateRemoveV1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ID3 V2 ähnelt.
        /// </summary>
        public static string settings_Id3_UpdateRemoveV2 {
            get {
                return ResourceManager.GetString("settings_Id3_UpdateRemoveV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID3V1 ähnelt.
        /// </summary>
        public static string settings_Id3_UpdateV1 {
            get {
                return ResourceManager.GetString("settings_Id3_UpdateV1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID3 V1 and ID3 V2 ähnelt.
        /// </summary>
        public static string settings_Id3_UpdateV1V2 {
            get {
                return ResourceManager.GetString("settings_Id3_UpdateV1V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID3 V2 ähnelt.
        /// </summary>
        public static string settings_Id3_UpdateV2 {
            get {
                return ResourceManager.GetString("settings_Id3_UpdateV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use APE and ID3 V1 Tags ähnelt.
        /// </summary>
        public static string settings_Id3_UseApe {
            get {
                return ResourceManager.GetString("settings_Id3_UseApe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Version 2.3 for ID3 V2 Tags ähnelt.
        /// </summary>
        public static string settings_Id3_UseV3 {
            get {
                return ResourceManager.GetString("settings_Id3_UseV3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Version 2.4 for ID3 V2 Tags ähnelt.
        /// </summary>
        public static string settings_Id3_UseV4 {
            get {
                return ResourceManager.GetString("settings_Id3_UseV4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validate Mp3 Files while scanning the folder / database ähnelt.
        /// </summary>
        public static string settings_Id3_ValidateMp3 {
            get {
                return ResourceManager.GetString("settings_Id3_ValidateMp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyboard Shortcuts ähnelt.
        /// </summary>
        public static string settings_Keys {
            get {
                return ResourceManager.GetString("settings_Keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alt ähnelt.
        /// </summary>
        public static string settings_Keys_Alt {
            get {
                return ResourceManager.GetString("settings_Keys_Alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl ähnelt.
        /// </summary>
        public static string settings_Keys_Ctrl {
            get {
                return ResourceManager.GetString("settings_Keys_Ctrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: ähnelt.
        /// </summary>
        public static string settings_Keys_Description {
            get {
                return ResourceManager.GetString("settings_Keys_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string settings_Keys_Header_Description {
            get {
                return ResourceManager.GetString("settings_Keys_Header_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID ähnelt.
        /// </summary>
        public static string settings_Keys_Header_Id {
            get {
                return ResourceManager.GetString("settings_Keys_Header_Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key(s) ähnelt.
        /// </summary>
        public static string settings_Keys_Header_Keys {
            get {
                return ResourceManager.GetString("settings_Keys_Header_Keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart of the application is required ähnelt.
        /// </summary>
        public static string settings_Keys_Restart {
            get {
                return ResourceManager.GetString("settings_Keys_Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shift ähnelt.
        /// </summary>
        public static string settings_Keys_Shift {
            get {
                return ResourceManager.GetString("settings_Keys_Shift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key Short Cut: ähnelt.
        /// </summary>
        public static string settings_Keys_ShortCut {
            get {
                return ResourceManager.GetString("settings_Keys_ShortCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language: ähnelt.
        /// </summary>
        public static string settings_Language {
            get {
                return ResourceManager.GetString("settings_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Row Color: ähnelt.
        /// </summary>
        public static string settings_RowColor {
            get {
                return ResourceManager.GetString("settings_RowColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags Settings ähnelt.
        /// </summary>
        public static string settings_Tags {
            get {
                return ResourceManager.GetString("settings_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Fill &quot;Number of Tracks&quot; on Multiple Tag Edit ähnelt.
        /// </summary>
        public static string settings_Tags_AutoFillNumberTracks {
            get {
                return ResourceManager.GetString("settings_Tags_AutoFillNumberTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use case conversion settings on Save ähnelt.
        /// </summary>
        public static string settings_Tags_CaseConversion {
            get {
                return ResourceManager.GetString("settings_Tags_CaseConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Readonly Attributte on Save ähnelt.
        /// </summary>
        public static string settings_Tags_ChangeReadOnly {
            get {
                return ResourceManager.GetString("settings_Tags_ChangeReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Comment Tag on Save ähnelt.
        /// </summary>
        public static string settings_Tags_ClearComment {
            get {
                return ResourceManager.GetString("settings_Tags_ClearComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Artist to AlbumArtist when empty ähnelt.
        /// </summary>
        public static string settings_Tags_CopyArtist {
            get {
                return ResourceManager.GetString("settings_Tags_CopyArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Artist Auto Completion Database ähnelt.
        /// </summary>
        public static string settings_Tags_DownloadMusicBrainzDatabase {
            get {
                return ResourceManager.GetString("settings_Tags_DownloadMusicBrainzDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Completion database is already at current version ähnelt.
        /// </summary>
        public static string settings_Tags_DownloadMusicBrainzDatabase_Current {
            get {
                return ResourceManager.GetString("settings_Tags_DownloadMusicBrainzDatabase_Current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading Auto Completion Database ähnelt.
        /// </summary>
        public static string settings_Tags_DownloadMusicBrainzDatabase_Downloading {
            get {
                return ResourceManager.GetString("settings_Tags_DownloadMusicBrainzDatabase_Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags General ähnelt.
        /// </summary>
        public static string settings_Tags_General {
            get {
                return ResourceManager.GetString("settings_Tags_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preferred countries for MusicBrainz Search: ähnelt.
        /// </summary>
        public static string settings_Tags_PreferredCountries {
            get {
                return ResourceManager.GetString("settings_Tags_PreferredCountries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Theme: ähnelt.
        /// </summary>
        public static string settings_Theme {
            get {
                return ResourceManager.GetString("settings_Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Songs ähnelt.
        /// </summary>
        public static string songGrid_Header {
            get {
                return ResourceManager.GetString("songGrid_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album ähnelt.
        /// </summary>
        public static string songHeader_Album {
            get {
                return ResourceManager.GetString("songHeader_Album", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Artist ähnelt.
        /// </summary>
        public static string songHeader_AlbumArtist {
            get {
                return ResourceManager.GetString("songHeader_AlbumArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Sortname ähnelt.
        /// </summary>
        public static string songHeader_AlbumSortName {
            get {
                return ResourceManager.GetString("songHeader_AlbumSortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist ähnelt.
        /// </summary>
        public static string songHeader_Artist {
            get {
                return ResourceManager.GetString("songHeader_Artist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist Sortname ähnelt.
        /// </summary>
        public static string songHeader_ArtistSortName {
            get {
                return ResourceManager.GetString("songHeader_ArtistSortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitrate ähnelt.
        /// </summary>
        public static string songHeader_BitRate {
            get {
                return ResourceManager.GetString("songHeader_BitRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BPM ähnelt.
        /// </summary>
        public static string songHeader_BPM {
            get {
                return ResourceManager.GetString("songHeader_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Channels ähnelt.
        /// </summary>
        public static string songHeader_Channels {
            get {
                return ResourceManager.GetString("songHeader_Channels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment ähnelt.
        /// </summary>
        public static string songHeader_Comment {
            get {
                return ResourceManager.GetString("songHeader_Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commercial Information ähnelt.
        /// </summary>
        public static string songHeader_CommercialInformation {
            get {
                return ResourceManager.GetString("songHeader_CommercialInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Composer ähnelt.
        /// </summary>
        public static string songHeader_Composer {
            get {
                return ResourceManager.GetString("songHeader_Composer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conductor ähnelt.
        /// </summary>
        public static string songHeader_Conductor {
            get {
                return ResourceManager.GetString("songHeader_Conductor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright ähnelt.
        /// </summary>
        public static string songHeader_Copyright {
            get {
                return ResourceManager.GetString("songHeader_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright Information ähnelt.
        /// </summary>
        public static string songHeader_CopyrightInformation {
            get {
                return ResourceManager.GetString("songHeader_CopyrightInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created ähnelt.
        /// </summary>
        public static string songHeader_CreationTime {
            get {
                return ResourceManager.GetString("songHeader_CreationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disc # ähnelt.
        /// </summary>
        public static string songHeader_Disc {
            get {
                return ResourceManager.GetString("songHeader_Disc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die # Discs ähnelt.
        /// </summary>
        public static string songHeader_DiscCount {
            get {
                return ResourceManager.GetString("songHeader_DiscCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration ähnelt.
        /// </summary>
        public static string songHeader_Duration {
            get {
                return ResourceManager.GetString("songHeader_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoded by ähnelt.
        /// </summary>
        public static string songHeader_EncodedBy {
            get {
                return ResourceManager.GetString("songHeader_EncodedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumerate ähnelt.
        /// </summary>
        public static string songHeader_Enumerate {
            get {
                return ResourceManager.GetString("songHeader_Enumerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File Name ähnelt.
        /// </summary>
        public static string songHeader_FileName {
            get {
                return ResourceManager.GetString("songHeader_FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path ähnelt.
        /// </summary>
        public static string songHeader_FilePath {
            get {
                return ResourceManager.GetString("songHeader_FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size (kb) ähnelt.
        /// </summary>
        public static string songHeader_FileSize {
            get {
                return ResourceManager.GetString("songHeader_FileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genre ähnelt.
        /// </summary>
        public static string songHeader_Genre {
            get {
                return ResourceManager.GetString("songHeader_Genre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grouping ähnelt.
        /// </summary>
        public static string songHeader_Grouping {
            get {
                return ResourceManager.GetString("songHeader_Grouping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interpreted by ähnelt.
        /// </summary>
        public static string songHeader_Interpreter {
            get {
                return ResourceManager.GetString("songHeader_Interpreter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed ähnelt.
        /// </summary>
        public static string songHeader_LastWriteTime {
            get {
                return ResourceManager.GetString("songHeader_LastWriteTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyrics ähnelt.
        /// </summary>
        public static string songHeader_Lyrics {
            get {
                return ResourceManager.GetString("songHeader_Lyrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Media Type ähnelt.
        /// </summary>
        public static string songHeader_MediaType {
            get {
                return ResourceManager.GetString("songHeader_MediaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Artist ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzArtistId {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzArtistId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Artist ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseArtistId {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseArtistId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Country ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseCountry {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Group ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseGroupId {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseGroupId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseId {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Status ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseStatus {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Type ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzReleaseType {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzReleaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB Release Track ähnelt.
        /// </summary>
        public static string songHeader_MusicBrainzTrackId {
            get {
                return ResourceManager.GetString("songHeader_MusicBrainzTrackId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New File Name ähnelt.
        /// </summary>
        public static string songHeader_NewFileName {
            get {
                return ResourceManager.GetString("songHeader_NewFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Num. Discs ähnelt.
        /// </summary>
        public static string songHeader_NumDisc {
            get {
                return ResourceManager.GetString("songHeader_NumDisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die # Pics ähnelt.
        /// </summary>
        public static string songHeader_NumPics {
            get {
                return ResourceManager.GetString("songHeader_NumPics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Num. Tracks ähnelt.
        /// </summary>
        public static string songHeader_NumTracks {
            get {
                return ResourceManager.GetString("songHeader_NumTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Artist Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialArtistInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialArtistInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Audiofile Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialAudioFileInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialAudioFileInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Audiosource Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialAudioSourceInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialAudioSourceInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Internet Radio Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialInternetRadioInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialInternetRadioInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Payment Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialPaymentInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialPaymentInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off. Publisher Information ähnelt.
        /// </summary>
        public static string songHeader_OfficialPublisherInformation {
            get {
                return ResourceManager.GetString("songHeader_OfficialPublisherInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Album ähnelt.
        /// </summary>
        public static string songHeader_OriginalAlbum {
            get {
                return ResourceManager.GetString("songHeader_OriginalAlbum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Artist ähnelt.
        /// </summary>
        public static string songHeader_OriginalArtist {
            get {
                return ResourceManager.GetString("songHeader_OriginalArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Filename ähnelt.
        /// </summary>
        public static string songHeader_OriginalFileName {
            get {
                return ResourceManager.GetString("songHeader_OriginalFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Lyricswriter ähnelt.
        /// </summary>
        public static string songHeader_OriginalLyricsWriter {
            get {
                return ResourceManager.GetString("songHeader_OriginalLyricsWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Owner ähnelt.
        /// </summary>
        public static string songHeader_OriginalOwner {
            get {
                return ResourceManager.GetString("songHeader_OriginalOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Release ähnelt.
        /// </summary>
        public static string songHeader_OriginalRelease {
            get {
                return ResourceManager.GetString("songHeader_OriginalRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Picture ähnelt.
        /// </summary>
        public static string songHeader_Picture {
            get {
                return ResourceManager.GetString("songHeader_Picture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Publisher ähnelt.
        /// </summary>
        public static string songHeader_Publisher {
            get {
                return ResourceManager.GetString("songHeader_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rating ähnelt.
        /// </summary>
        public static string songHeader_Rating {
            get {
                return ResourceManager.GetString("songHeader_Rating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Gain ähnelt.
        /// </summary>
        public static string songHeader_ReplayGainAlbum {
            get {
                return ResourceManager.GetString("songHeader_ReplayGainAlbum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Peak ähnelt.
        /// </summary>
        public static string songHeader_ReplayGainAlbumPeak {
            get {
                return ResourceManager.GetString("songHeader_ReplayGainAlbumPeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track Gain ähnelt.
        /// </summary>
        public static string songHeader_ReplayGainTrack {
            get {
                return ResourceManager.GetString("songHeader_ReplayGainTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track Peak ähnelt.
        /// </summary>
        public static string songHeader_ReplayGainTrackPeak {
            get {
                return ResourceManager.GetString("songHeader_ReplayGainTrackPeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Samplerate ähnelt.
        /// </summary>
        public static string songHeader_SampleRate {
            get {
                return ResourceManager.GetString("songHeader_SampleRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string songHeader_Status {
            get {
                return ResourceManager.GetString("songHeader_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subtitle ähnelt.
        /// </summary>
        public static string songHeader_SubTitle {
            get {
                return ResourceManager.GetString("songHeader_SubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string songHeader_TagType {
            get {
                return ResourceManager.GetString("songHeader_TagType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Textwriter ähnelt.
        /// </summary>
        public static string songHeader_TextWriter {
            get {
                return ResourceManager.GetString("songHeader_TextWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string songHeader_Title {
            get {
                return ResourceManager.GetString("songHeader_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title Sortname ähnelt.
        /// </summary>
        public static string songHeader_TitleSortName {
            get {
                return ResourceManager.GetString("songHeader_TitleSortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track ähnelt.
        /// </summary>
        public static string songHeader_Track {
            get {
                return ResourceManager.GetString("songHeader_Track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die # Tracks ähnelt.
        /// </summary>
        public static string songHeader_TrackCount {
            get {
                return ResourceManager.GetString("songHeader_TrackCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unused ähnelt.
        /// </summary>
        public static string songHeader_Unused {
            get {
                return ResourceManager.GetString("songHeader_Unused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Codec ähnelt.
        /// </summary>
        public static string songHeader_Version {
            get {
                return ResourceManager.GetString("songHeader_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Year ähnelt.
        /// </summary>
        public static string songHeader_Year {
            get {
                return ResourceManager.GetString("songHeader_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Files: {0} ähnelt.
        /// </summary>
        public static string statusBar_NumberOfFiles {
            get {
                return ResourceManager.GetString("statusBar_NumberOfFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Selected: {0}) ähnelt.
        /// </summary>
        public static string statusBar_NumberOfSelectedFiles {
            get {
                return ResourceManager.GetString("statusBar_NumberOfSelectedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Database ähnelt.
        /// </summary>
        public static string switchDatabase_Add {
            get {
                return ResourceManager.GetString("switchDatabase_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch Database ähnelt.
        /// </summary>
        public static string switchDatabase_Header {
            get {
                return ResourceManager.GetString("switchDatabase_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database Name: ähnelt.
        /// </summary>
        public static string switchDatabase_Name {
            get {
                return ResourceManager.GetString("switchDatabase_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Database ähnelt.
        /// </summary>
        public static string switchDatabase_ToolTip_Delete {
            get {
                return ResourceManager.GetString("switchDatabase_ToolTip_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch Database ähnelt.
        /// </summary>
        public static string switchDatabase_ToolTip_Switch {
            get {
                return ResourceManager.GetString("switchDatabase_ToolTip_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Format To List ähnelt.
        /// </summary>
        public static string tagAndRename_AddFormat {
            get {
                return ResourceManager.GetString("tagAndRename_AddFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album ähnelt.
        /// </summary>
        public static string tagAndRename_Album {
            get {
                return ResourceManager.GetString("tagAndRename_Album", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Artist ähnelt.
        /// </summary>
        public static string tagAndRename_AlbumArtist {
            get {
                return ResourceManager.GetString("tagAndRename_AlbumArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist ähnelt.
        /// </summary>
        public static string tagAndRename_Artist {
            get {
                return ResourceManager.GetString("tagAndRename_Artist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitrate ähnelt.
        /// </summary>
        public static string tagAndRename_BitRate {
            get {
                return ResourceManager.GetString("tagAndRename_BitRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BPM ähnelt.
        /// </summary>
        public static string tagAndRename_BPM {
            get {
                return ResourceManager.GetString("tagAndRename_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment ähnelt.
        /// </summary>
        public static string tagAndRename_Comment {
            get {
                return ResourceManager.GetString("tagAndRename_Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Composer ähnelt.
        /// </summary>
        public static string tagAndRename_Composer {
            get {
                return ResourceManager.GetString("tagAndRename_Composer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conductor ähnelt.
        /// </summary>
        public static string tagAndRename_Conductor {
            get {
                return ResourceManager.GetString("tagAndRename_Conductor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disc Number ähnelt.
        /// </summary>
        public static string tagAndRename_Disc {
            get {
                return ResourceManager.GetString("tagAndRename_Disc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total # of discs ähnelt.
        /// </summary>
        public static string tagAndRename_DiscTotal {
            get {
                return ResourceManager.GetString("tagAndRename_DiscTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumerates Files ähnelt.
        /// </summary>
        public static string tagAndRename_Enumerate {
            get {
                return ResourceManager.GetString("tagAndRename_Enumerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File already exists. Common Tags used? ähnelt.
        /// </summary>
        public static string tagAndRename_FileExists {
            get {
                return ResourceManager.GetString("tagAndRename_FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Filename ähnelt.
        /// </summary>
        public static string tagAndRename_Filename {
            get {
                return ResourceManager.GetString("tagAndRename_Filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First &quot;n&quot; char of Album Artist ähnelt.
        /// </summary>
        public static string tagAndRename_FirstNofAlbumArtist {
            get {
                return ResourceManager.GetString("tagAndRename_FirstNofAlbumArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First &quot;n&quot; char of Artist ähnelt.
        /// </summary>
        public static string tagAndRename_FirstNofArtist {
            get {
                return ResourceManager.GetString("tagAndRename_FirstNofArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die \ = Folder: to specify that parameters in front of it to be taken from the folder name ähnelt.
        /// </summary>
        public static string tagAndRename_Folder {
            get {
                return ResourceManager.GetString("tagAndRename_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genre ähnelt.
        /// </summary>
        public static string tagAndRename_Genre {
            get {
                return ResourceManager.GetString("tagAndRename_Genre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content Group ähnelt.
        /// </summary>
        public static string tagAndRename_Group {
            get {
                return ResourceManager.GetString("tagAndRename_Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format ähnelt.
        /// </summary>
        public static string tagAndRename_GroupBoxFormat {
            get {
                return ResourceManager.GetString("tagAndRename_GroupBoxFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters (Click to add to the list) ähnelt.
        /// </summary>
        public static string tagAndRename_GroupBoxParam {
            get {
                return ResourceManager.GetString("tagAndRename_GroupBoxParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag from File Name ähnelt.
        /// </summary>
        public static string tagAndRename_Header {
            get {
                return ResourceManager.GetString("tagAndRename_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename File ähnelt.
        /// </summary>
        public static string tagAndRename_Header_Rename {
            get {
                return ResourceManager.GetString("tagAndRename_Header_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Parameter Format. Please Correct. ähnelt.
        /// </summary>
        public static string tagAndRename_InvalidParm {
            get {
                return ResourceManager.GetString("tagAndRename_InvalidParm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified / remixed by ähnelt.
        /// </summary>
        public static string tagAndRename_ModifiedBy {
            get {
                return ResourceManager.GetString("tagAndRename_ModifiedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filename too long. Please change it. ähnelt.
        /// </summary>
        public static string tagAndRename_NameTooLong {
            get {
                return ResourceManager.GetString("tagAndRename_NameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Digits ähnelt.
        /// </summary>
        public static string tagAndRename_NumberDigits {
            get {
                return ResourceManager.GetString("tagAndRename_NumberDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original: ähnelt.
        /// </summary>
        public static string tagAndRename_Original {
            get {
                return ResourceManager.GetString("tagAndRename_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview Changes ähnelt.
        /// </summary>
        public static string tagAndRename_PreviewChanges {
            get {
                return ResourceManager.GetString("tagAndRename_PreviewChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Format From List ähnelt.
        /// </summary>
        public static string tagAndRename_RemoveFormat {
            get {
                return ResourceManager.GetString("tagAndRename_RemoveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t Rename File {0}: {1} ähnelt.
        /// </summary>
        public static string tagAndRename_Rename {
            get {
                return ResourceManager.GetString("tagAndRename_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start at ähnelt.
        /// </summary>
        public static string tagAndRename_StartAt {
            get {
                return ResourceManager.GetString("tagAndRename_StartAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SubTitle ähnelt.
        /// </summary>
        public static string tagAndRename_SubTitle {
            get {
                return ResourceManager.GetString("tagAndRename_SubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters ähnelt.
        /// </summary>
        public static string tagAndRename_TabHeader_Parameter {
            get {
                return ResourceManager.GetString("tagAndRename_TabHeader_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview ähnelt.
        /// </summary>
        public static string tagAndRename_TabHeader_Preview {
            get {
                return ResourceManager.GetString("tagAndRename_TabHeader_Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string tagAndRename_Title {
            get {
                return ResourceManager.GetString("tagAndRename_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track Number ähnelt.
        /// </summary>
        public static string tagAndRename_Track {
            get {
                return ResourceManager.GetString("tagAndRename_Track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total # of tracks ähnelt.
        /// </summary>
        public static string tagAndRename_TrackTotal {
            get {
                return ResourceManager.GetString("tagAndRename_TrackTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unused ähnelt.
        /// </summary>
        public static string tagAndRename_Unused {
            get {
                return ResourceManager.GetString("tagAndRename_Unused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Year ähnelt.
        /// </summary>
        public static string tagAndRename_Year {
            get {
                return ResourceManager.GetString("tagAndRename_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed Artist ähnelt.
        /// </summary>
        public static string tagChecker_ChangedArtist {
            get {
                return ResourceManager.GetString("tagChecker_ChangedArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Artist ähnelt.
        /// </summary>
        public static string tagChecker_OriginalArtist {
            get {
                return ResourceManager.GetString("tagChecker_OriginalArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applied ähnelt.
        /// </summary>
        public static string tagChecker_Status_Applied {
            get {
                return ResourceManager.GetString("tagChecker_Status_Applied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full Match ähnelt.
        /// </summary>
        public static string tagChecker_Status_FullMatch {
            get {
                return ResourceManager.GetString("tagChecker_Status_FullMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full Match Changed ähnelt.
        /// </summary>
        public static string tagChecker_Status_FullMatchChanged {
            get {
                return ResourceManager.GetString("tagChecker_Status_FullMatchChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignored ähnelt.
        /// </summary>
        public static string tagChecker_Status_Ignored {
            get {
                return ResourceManager.GetString("tagChecker_Status_Ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Match ähnelt.
        /// </summary>
        public static string tagChecker_Status_NoMatch {
            get {
                return ResourceManager.GetString("tagChecker_Status_NoMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partial Match ähnelt.
        /// </summary>
        public static string tagChecker_Status_PartialMatch {
            get {
                return ResourceManager.GetString("tagChecker_Status_PartialMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album: ähnelt.
        /// </summary>
        public static string tagEdit_Album {
            get {
                return ResourceManager.GetString("tagEdit_Album", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Artist: ähnelt.
        /// </summary>
        public static string tagEdit_AlbumArtist {
            get {
                return ResourceManager.GetString("tagEdit_AlbumArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Artist Sort: ähnelt.
        /// </summary>
        public static string tagEdit_AlbumArtistSort {
            get {
                return ResourceManager.GetString("tagEdit_AlbumArtistSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Album Sort: ähnelt.
        /// </summary>
        public static string tagEdit_AlbumSort {
            get {
                return ResourceManager.GetString("tagEdit_AlbumSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist: ähnelt.
        /// </summary>
        public static string tagEdit_Artist {
            get {
                return ResourceManager.GetString("tagEdit_Artist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist Sort: ähnelt.
        /// </summary>
        public static string tagEdit_ArtistSort {
            get {
                return ResourceManager.GetString("tagEdit_ArtistSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment: ähnelt.
        /// </summary>
        public static string tagEdit_Comment {
            get {
                return ResourceManager.GetString("tagEdit_Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commercial Infomation URL: ähnelt.
        /// </summary>
        public static string tagEdit_CommercialInfo {
            get {
                return ResourceManager.GetString("tagEdit_CommercialInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Composer: ähnelt.
        /// </summary>
        public static string tagEdit_Composer {
            get {
                return ResourceManager.GetString("tagEdit_Composer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conductor: ähnelt.
        /// </summary>
        public static string tagEdit_Conductor {
            get {
                return ResourceManager.GetString("tagEdit_Conductor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content Group: ähnelt.
        /// </summary>
        public static string tagEdit_Content_Group {
            get {
                return ResourceManager.GetString("tagEdit_Content_Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright: ähnelt.
        /// </summary>
        public static string tagEdit_Copyright {
            get {
                return ResourceManager.GetString("tagEdit_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright Information URL: ähnelt.
        /// </summary>
        public static string tagEdit_CopyrightInformation {
            get {
                return ResourceManager.GetString("tagEdit_CopyrightInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disc: ähnelt.
        /// </summary>
        public static string tagEdit_Disc {
            get {
                return ResourceManager.GetString("tagEdit_Disc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoded By: ähnelt.
        /// </summary>
        public static string tagEdit_EncodedBy {
            get {
                return ResourceManager.GetString("tagEdit_EncodedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Front Cover: ähnelt.
        /// </summary>
        public static string tagEdit_FrontCover {
            get {
                return ResourceManager.GetString("tagEdit_FrontCover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genre: ähnelt.
        /// </summary>
        public static string tagEdit_Genre {
            get {
                return ResourceManager.GetString("tagEdit_Genre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Genre(s) ähnelt.
        /// </summary>
        public static string tagEdit_Genre_Watermark {
            get {
                return ResourceManager.GetString("tagEdit_Genre_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get From File ähnelt.
        /// </summary>
        public static string tagEdit_GetTrackLength {
            get {
                return ResourceManager.GetString("tagEdit_GetTrackLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Song Length from File ähnelt.
        /// </summary>
        public static string tagEdit_GetTrackLength_Checkbox {
            get {
                return ResourceManager.GetString("tagEdit_GetTrackLength_Checkbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag Edit ähnelt.
        /// </summary>
        public static string tagEdit_Header {
            get {
                return ResourceManager.GetString("tagEdit_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interpreted by: ähnelt.
        /// </summary>
        public static string tagEdit_InterpretedBy {
            get {
                return ResourceManager.GetString("tagEdit_InterpretedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Person ähnelt.
        /// </summary>
        public static string tagEdit_InvolvedPerson_Add {
            get {
                return ResourceManager.GetString("tagEdit_InvolvedPerson_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Person ähnelt.
        /// </summary>
        public static string tagEdit_InvolvedPerson_Delete {
            get {
                return ResourceManager.GetString("tagEdit_InvolvedPerson_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function ähnelt.
        /// </summary>
        public static string tagEdit_InvolvedPerson_Function {
            get {
                return ResourceManager.GetString("tagEdit_InvolvedPerson_Function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Involved Person ähnelt.
        /// </summary>
        public static string tagEdit_InvolvedPerson_Header {
            get {
                return ResourceManager.GetString("tagEdit_InvolvedPerson_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string tagEdit_InvolvedPerson_Name {
            get {
                return ResourceManager.GetString("tagEdit_InvolvedPerson_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Media Type: ähnelt.
        /// </summary>
        public static string tagEdit_MediaType {
            get {
                return ResourceManager.GetString("tagEdit_MediaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Media Types: ähnelt.
        /// </summary>
        public static string tagEdit_MediaTypes {
            get {
                return ResourceManager.GetString("tagEdit_MediaTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artist Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzArtistId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzArtistId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disc Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzDiscId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzDiscId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get from MusicBrainz ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzInfo {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Artist Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseArtistId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseArtistId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Country: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseCountry {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Group Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseGroupId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseGroupId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Status: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseStatus {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track Id: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseTrackId {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseTrackId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Type: ähnelt.
        /// </summary>
        public static string tagEdit_MusicBrainzReleaseType {
            get {
                return ResourceManager.GetString("tagEdit_MusicBrainzReleaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Musician ähnelt.
        /// </summary>
        public static string tagEdit_MusicCreditList_Add {
            get {
                return ResourceManager.GetString("tagEdit_MusicCreditList_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Musician ähnelt.
        /// </summary>
        public static string tagEdit_MusicCreditList_Delete {
            get {
                return ResourceManager.GetString("tagEdit_MusicCreditList_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Music Credit List (ID3 V2.4 only) ähnelt.
        /// </summary>
        public static string tagEdit_MusicCreditList_Header {
            get {
                return ResourceManager.GetString("tagEdit_MusicCreditList_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instrument ähnelt.
        /// </summary>
        public static string tagEdit_MusicCreditList_Instrument {
            get {
                return ResourceManager.GetString("tagEdit_MusicCreditList_Instrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Artist URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialArtist {
            get {
                return ResourceManager.GetString("tagEdit_OfficialArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Audiofile URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialAudiofile {
            get {
                return ResourceManager.GetString("tagEdit_OfficialAudiofile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Audio Source URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialAudioSource {
            get {
                return ResourceManager.GetString("tagEdit_OfficialAudioSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Payment URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialPayment {
            get {
                return ResourceManager.GetString("tagEdit_OfficialPayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Publisher URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialPublisher {
            get {
                return ResourceManager.GetString("tagEdit_OfficialPublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official Radio Station URL: ähnelt.
        /// </summary>
        public static string tagEdit_OfficialRadioStation {
            get {
                return ResourceManager.GetString("tagEdit_OfficialRadioStation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Album Title: ähnelt.
        /// </summary>
        public static string tagEdit_OrigAlbum {
            get {
                return ResourceManager.GetString("tagEdit_OrigAlbum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Artist: ähnelt.
        /// </summary>
        public static string tagEdit_OrigArtist {
            get {
                return ResourceManager.GetString("tagEdit_OrigArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original File Name: ähnelt.
        /// </summary>
        public static string tagEdit_OrigFileName {
            get {
                return ResourceManager.GetString("tagEdit_OrigFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Lyrics Writer: ähnelt.
        /// </summary>
        public static string tagEdit_OrigLyricsWriter {
            get {
                return ResourceManager.GetString("tagEdit_OrigLyricsWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Owner: ähnelt.
        /// </summary>
        public static string tagEdit_OrigOwner {
            get {
                return ResourceManager.GetString("tagEdit_OrigOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Release Year: ähnelt.
        /// </summary>
        public static string tagEdit_OrigReleaseYear {
            get {
                return ResourceManager.GetString("tagEdit_OrigReleaseYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Part of Compilation ähnelt.
        /// </summary>
        public static string tagEdit_PartOfCompilation {
            get {
                return ResourceManager.GetString("tagEdit_PartOfCompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Publisher: ähnelt.
        /// </summary>
        public static string tagEdit_Publisher {
            get {
                return ResourceManager.GetString("tagEdit_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Rating ähnelt.
        /// </summary>
        public static string tagEdit_Rating_Add {
            get {
                return ResourceManager.GetString("tagEdit_Rating_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Rating ähnelt.
        /// </summary>
        public static string tagEdit_Rating_Delete {
            get {
                return ResourceManager.GetString("tagEdit_Rating_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die As per ID3 standard the rating is 1-255 where 1 is worst and 255 is best. 0 is unknown.
        ///
        ///Many programs have their own rating and may redefine the ID3 standard, like a Star Rating from 1 - 5 that is used by MPTagThat.
        /// 
        ///If no personal counter is wanted it may be omitted.
        ///
        ///To change the order of the ratings drag the rows. ähnelt.
        /// </summary>
        public static string tagEdit_Rating_Note {
            get {
                return ResourceManager.GetString("tagEdit_Rating_Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play Count ähnelt.
        /// </summary>
        public static string tagEdit_RatingPlayCount {
            get {
                return ResourceManager.GetString("tagEdit_RatingPlayCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User (email) ähnelt.
        /// </summary>
        public static string tagEdit_RatingUser {
            get {
                return ResourceManager.GetString("tagEdit_RatingUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove existing pictures ähnelt.
        /// </summary>
        public static string tagEdit_Remove_Existing_Pictures {
            get {
                return ResourceManager.GetString("tagEdit_Remove_Existing_Pictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Song Length (ms): ähnelt.
        /// </summary>
        public static string tagEdit_Songlength {
            get {
                return ResourceManager.GetString("tagEdit_Songlength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subtitle: ähnelt.
        /// </summary>
        public static string tagEdit_SubTitle {
            get {
                return ResourceManager.GetString("tagEdit_SubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Tags ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Additional {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Additional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detailed Information ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Detailed_Information {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Detailed_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Involved People ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Involved_People {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Involved_People", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyrics Details ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Lyrics {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Lyrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Main Tags ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Main {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MusicBrainz Information ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_MusicBrainz {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_MusicBrainz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Information ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Original_Information {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Original_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Picture Details ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Pictures {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Pictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rating ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Rating {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Rating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non Standard Frames ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_UserFrames {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_UserFrames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Web Information ähnelt.
        /// </summary>
        public static string tagEdit_TabHeader_Web_Information {
            get {
                return ResourceManager.GetString("tagEdit_TabHeader_Web_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyrics / Text Writer: ähnelt.
        /// </summary>
        public static string tagEdit_TextWriter {
            get {
                return ResourceManager.GetString("tagEdit_TextWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title: ähnelt.
        /// </summary>
        public static string tagEdit_Title {
            get {
                return ResourceManager.GetString("tagEdit_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title Sort: ähnelt.
        /// </summary>
        public static string tagEdit_TitleSort {
            get {
                return ResourceManager.GetString("tagEdit_TitleSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Lyrics from File ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Lyrics_GetFile {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Lyrics_GetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Lyrics from configured Sites ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Lyrics_GetInternet {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Lyrics_GetInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Lyrics ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Lyrics_Remove {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Lyrics_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Cover Art from File ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_GetCoverArt_File {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_GetCoverArt_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Cover Art from configured Sites ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_GetCoverArt_Internet {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_GetCoverArt_Internet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove all Cover Art ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_Remove_CoverArt {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_Remove_CoverArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove this Cover Art ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_RemoveDetail_CoverArt {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_RemoveDetail_CoverArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Cover Art to folder.jpg ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_Save_CoverArt {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_Save_CoverArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Cover Art to file ähnelt.
        /// </summary>
        public static string tagEdit_ToolTip_Picture_SaveDetail_CoverArt {
            get {
                return ResourceManager.GetString("tagEdit_ToolTip_Picture_SaveDetail_CoverArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track: ähnelt.
        /// </summary>
        public static string tagEdit_Track {
            get {
                return ResourceManager.GetString("tagEdit_Track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Frame ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_Add {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete All Frames ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_DeleteAllFrames {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_DeleteAllFrames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Frame(s) ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_DeleteFrame {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_DeleteFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_Description {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frame ID ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_FrameId {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_FrameId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frame Value ähnelt.
        /// </summary>
        public static string tagEdit_UserFrames_Text {
            get {
                return ResourceManager.GetString("tagEdit_UserFrames_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Year: ähnelt.
        /// </summary>
        public static string tagEdit_Year {
            get {
                return ResourceManager.GetString("tagEdit_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folders ähnelt.
        /// </summary>
        public static string treeView_Folders {
            get {
                return ResourceManager.GetString("treeView_Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Treeview ähnelt.
        /// </summary>
        public static string treeview_Header {
            get {
                return ResourceManager.GetString("treeview_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Jump To Folder ähnelt.
        /// </summary>
        public static string treeView_JumpToFolder {
            get {
                return ResourceManager.GetString("treeView_JumpToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading ... ähnelt.
        /// </summary>
        public static string treeView_Loading {
            get {
                return ResourceManager.GetString("treeView_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View Mode: ähnelt.
        /// </summary>
        public static string treeView_Mode {
            get {
                return ResourceManager.GetString("treeView_Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Database ähnelt.
        /// </summary>
        public static string treeView_Mode_Database {
            get {
                return ResourceManager.GetString("treeView_Mode_Database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder ähnelt.
        /// </summary>
        public static string treeView_Mode_Folder {
            get {
                return ResourceManager.GetString("treeView_Mode_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TreeView Options ähnelt.
        /// </summary>
        public static string treeView_Options {
            get {
                return ResourceManager.GetString("treeView_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh TreeView ähnelt.
        /// </summary>
        public static string treeView_RefreshTreeView {
            get {
                return ResourceManager.GetString("treeView_RefreshTreeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan Subfolders ähnelt.
        /// </summary>
        public static string treeView_ScanSubfolders {
            get {
                return ResourceManager.GetString("treeView_ScanSubfolders", resourceCulture);
            }
        }
    }
}
